<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ropensci on rOpenSci - open tools for open science</title>
    <link>https://ropensci.org/tags/ropensci/</link>
    <description>Recent content in Ropensci on rOpenSci - open tools for open science</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 14 Nov 2017 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://ropensci.org/tags/ropensci/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2017 rOpenSci ozunconf :: Reflections and the realtime Package</title>
      <link>https://ropensci.org/blog/2017/11/14/realtime/</link>
      <pubDate>Tue, 14 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/11/14/realtime/</guid>
      <description>
        
        &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;This year&amp;rsquo;s &lt;a href=&#34;https://ozunconf17.ropensci.org/&#34;&gt;rOpenSci ozunconf&lt;/a&gt; was held in Melbourne, bringing together over 45 R enthusiasts from around the country and beyond. As is customary, ideas for projects were discussed in &lt;a href=&#34;https://github.com/ropensci/ozunconf17/issues&#34;&gt;GitHub Issues&lt;/a&gt; (41 of them by the time the unconf rolled around!) and there was no shortage of enthusiasm, interesting concepts, and varied experience.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been to a few unconfs now and I treasure the time I get to spend with new people, new ideas, new backgrounds, new approaches, and new insights. That&amp;rsquo;s not to take away from the time I get to spend with people I met at previous unconfs; I&amp;rsquo;ve gained great friendships and started collaborations on side projects with these wonderful people.&lt;/p&gt;

&lt;p&gt;When the call for nominations came around this year it was an easy decision. I don&amp;rsquo;t have employer support to attend these things so I take time off work and pay my own way. This is my networking time, my development time, and my skill-building time. I wasn&amp;rsquo;t sure what sort of project I&amp;rsquo;d be interested in but I had no doubts something would come up that sounded interesting.&lt;/p&gt;

&lt;p&gt;As it happened, I had been playing around with a bit of code, purely out of interest and hoping to learn how &lt;a href=&#34;https://www.htmlwidgets.org/&#34;&gt;&lt;code&gt;htmlwidgets&lt;/code&gt;&lt;/a&gt; work. The idea I had was to make a classic graphic equaliser visualisation like this&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/img/blog-images/2017-11-14-realtime/graphiceq.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;using R.&lt;/p&gt;

&lt;p&gt;This presents several challenges; how can I get live audio into R, and how fast can I plot the signal? I had doubts about both parts, partly because of the way that R calls tie up the session (&lt;a href=&#34;https://appsilondatascience.com/blog/rstats/2017/11/01/r-promises-hands-on.html&#34;&gt;for now&amp;hellip;&lt;/a&gt;) and partly because constructing a &lt;code&gt;ggplot2&lt;/code&gt; object is somewhat slow (in terms of raw audio speeds). I&amp;rsquo;d heard about &lt;code&gt;htmlwidgets&lt;/code&gt; and thought there must be a way to leverage that towards my goal.&lt;/p&gt;

&lt;p&gt;I searched for a graphic equaliser javascript library to work with and didn&amp;rsquo;t find much that aligned with what I had in my head. Eventually I stumbled on &lt;a href=&#34;https://p5js.org/&#34;&gt;&lt;code&gt;p5.js&lt;/code&gt;&lt;/a&gt; and its examples page which has an &lt;a href=&#34;https://p5js.org/examples/sound-frequency-spectrum.html&#34;&gt;audio-input plot with a live demo&lt;/a&gt;. It&amp;rsquo;s a frequency spectrum, but I figured that&amp;rsquo;s just a bit of binning away from what I need. Running the example there looks like&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/img/blog-images/2017-11-14-realtime/p5sound_optimised.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This seemed to be worth a go. I managed to follow enough of &lt;a href=&#34;https://www.htmlwidgets.org/develop_intro.html&#34;&gt;this tutorial&lt;/a&gt; to have the library called from R. I modified the javascript canvas code to look a little more familiar, and the first iteration of &lt;code&gt;geom_realtime()&lt;/code&gt; was born&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/3mdiCUbgxi0&#34; frameborder=&#34;0&#34; gesture=&#34;media&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;This seemed like enough of an idea that I proposed it in the GitHub Issues for the unconf. It got a bit of attention, which was worrying, because I had no idea what to do with this next. &lt;a href=&#34;https://github.com/petehaitch&#34;&gt;Peter Hickey&lt;/a&gt; pointed out that &lt;a href=&#34;https://github.com/seankross&#34;&gt;Sean Kross&lt;/a&gt; had &lt;a href=&#34;https://seankross.com/2017/08/11/Beyond-Axes-Simulating-Systems-with-Interactive-Graphics.html&#34;&gt;already wrapped some of the &lt;code&gt;p5.js&lt;/code&gt; calls into R calls&lt;/a&gt; with his &lt;code&gt;p5&lt;/code&gt; package, so this seemed like a great place to start. It&amp;rsquo;s quite a clever way of doing it too; it involves re-writing the &lt;code&gt;javascript&lt;/code&gt; which &lt;code&gt;htmlwidgets&lt;/code&gt; calls on each time you want to do something.&lt;/p&gt;

&lt;p&gt;Fast forward to the unconf and a decent number of people gathered around a little slip of paper with &lt;code&gt;geom_realtime()&lt;/code&gt; written on it. I had to admit to everyone that the &lt;code&gt;ggplot2&lt;/code&gt; aspect of my demo was a sham (it&amp;rsquo;s surprisingly easy to draw a canvas in just the right shade of grey with white gridlines), but people stayed, and we got to work seeing what else we could do with the idea. We came up with some suggestions for input sources, some different plot types we might like to support, and set about trying to understand what Sean&amp;rsquo;s package actually did.&lt;/p&gt;

&lt;p&gt;As it tends to work out, we had a great mix of people with different experience levels in different aspects of the project; some who knew how to make a package, some who knew how to work with &lt;code&gt;javascript&lt;/code&gt;, some who knew how to work with &lt;code&gt;websockets&lt;/code&gt;, some who knew about realtime data sources, and some who knew about nearly none of these things (✋ that would be me). If everyone knew every aspect about how to go about an unconf project I suspect the endeavor would be a bit boring. I love these events because I get to learn so much about so many different topics.&lt;/p&gt;

&lt;p&gt;I shared my demo script and we deconstructed the pieces. We dug into the inner workings of the &lt;code&gt;p5&lt;/code&gt; package and started determining which parts we could siphon off to meet our own needs. One of the aspects that we wanted to figure out was how to simulate realtime data. This could be useful both for testing, and also in the situation where one might want to &amp;rsquo;re-cast&amp;rsquo; some time-coded data. We were thankful that &lt;a href=&#34;https://github.com/kcf-jackson&#34;&gt;Jackson Kwok&lt;/a&gt; had gone deep-dive into &lt;code&gt;websockets&lt;/code&gt; and pretty soon (surprisingly soon, perhaps; within the first day) we had examples of (albeit, constructed) real-time (every 100ms) data streaming from a server and being plotted at-speed&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/img/blog-images/2017-11-14-realtime/realtime_runif_optimised.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Best of all, running the plot code didn&amp;rsquo;t tie up the session; it uses a listener written into the &lt;code&gt;javascript&lt;/code&gt; so it just waits for input on a particular port.&lt;/p&gt;

&lt;p&gt;With the core goal well underway, people started branching out into aspects they found most interesting. We had some people work on finding and connecting actual data sources, such as the bitcoin exchange rate&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/img/blog-images/2017-11-14-realtime/realtime_btc_optimised.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;and a live-stream of binary-encoded data from the &lt;a href=&#34;http://qrng.anu.edu.au/index.php&#34;&gt;Australian National University (ANU) Quantum Random Numbers Server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/img/blog-images/2017-11-14-realtime/realtime_bin_optimised.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Others formalised the code so that it can be piped into different &amp;lsquo;themes&amp;rsquo;, and retain the &lt;code&gt;p5&lt;/code&gt; structure for adding more components&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/img/blog-images/2017-11-14-realtime/realtime_bw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;These were still toy examples of course, but they highlight what&amp;rsquo;s possible. They were each constructed using an offshoot of the &lt;code&gt;p5&lt;/code&gt; package whereby the &lt;code&gt;javascript&lt;/code&gt; is re-written to include various features each time the plot is generated.&lt;/p&gt;

&lt;p&gt;Another route we took is to use the direct &lt;code&gt;javascript&lt;/code&gt; binding API with factory functions. This had less flexibility in terms of adding modular components, but meant that the &lt;code&gt;javascript&lt;/code&gt; could be modified without worrying about how it needed to interact with &lt;code&gt;p5&lt;/code&gt; so much. This resulted in some outstanding features such as side-scrolling and date-time stamps. We also managed to pipe the data off to another thread for additional processing (in R) before being sent to the plot.&lt;/p&gt;

&lt;p&gt;The example we ended up with reads the live-feed of Twitter posts under a given hashtag, computes a sentiment analysis on the words with R, and live-plots the result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/img/blog-images/2017-11-14-realtime/auspol.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Overall I was amazed at the progress we made over just two days. Starting from a silly idea/demo, we built a package which can plot realtime data, and can even serve up some data to be plotted. I have no expectations that this will be the way of the future, but it&amp;rsquo;s been a fantastic learning experience for me (and hopefully others too). It&amp;rsquo;s highlighted that there&amp;rsquo;s ways to achieve realtime plots, even if we&amp;rsquo;ve used a library built for drawing rather than one built for plotting per se.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s even inspired offshoots in the form of some R packages;  &lt;a href=&#34;https://github.com/ropenscilabs/tRainspotting&#34;&gt;&lt;code&gt;tRainspotting&lt;/code&gt;&lt;/a&gt; which shows realtime data on New South Wales public transport using &lt;code&gt;leaflet&lt;/code&gt; as the canvas&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/img/blog-images/2017-11-14-realtime/tRainspotting.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;and &lt;a href=&#34;https://github.com/kcf-jackson/jsReact/&#34;&gt;&lt;code&gt;jsReact&lt;/code&gt;&lt;/a&gt; which explores the interaction between R and Javascript&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kcf-jackson/jsReact/raw/master/inst/example_5.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/kcf-jackson/jsReact/raw/master/inst/example_6.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The possibilities are truly astounding. My list of &amp;lsquo;things to learn&amp;rsquo; has grown significantly since the unconf, and projects are still starting up/continuing to develop. The &lt;a href=&#34;https://github.com/jonocarroll/ggeasy&#34;&gt;&lt;code&gt;ggeasy&lt;/code&gt;&lt;/a&gt; package isn&amp;rsquo;t related, but it was spawned from another unconf Github Issue idea. Again; ideas and collaborations starting and developing.&lt;/p&gt;

&lt;p&gt;I had a great time at the unconf, and I can&amp;rsquo;t wait until the next one. My hand will be going up to help out, attend, and help start something new.&lt;/p&gt;

&lt;p&gt;My thanks and congratulations go out to each of the &lt;a href=&#34;https://github.com/ropenscilabs/realtime&#34;&gt;&lt;code&gt;realtime&lt;/code&gt;&lt;/a&gt; developers: &lt;a href=&#34;https://github.com/richardbeare&#34;&gt;Richard Beare&lt;/a&gt;, &lt;a href=&#34;https://github.com/jonocarroll&#34;&gt;Jonathan Carroll&lt;/a&gt;, &lt;a href=&#34;https://github.com/kimnewzealand&#34;&gt;Kim Fitter&lt;/a&gt;, &lt;a href=&#34;https://github.com/softloud&#34;&gt;Charles Gray&lt;/a&gt;, &lt;a href=&#34;https://github.com/jeffreyhanson&#34;&gt;Jeffrey O Hanson&lt;/a&gt;, &lt;a href=&#34;https://github.com/holtzy&#34;&gt;Yan Holtz&lt;/a&gt;, &lt;a href=&#34;https://github.com/kcf-jackson&#34;&gt;Jackson Kwok&lt;/a&gt;, &lt;a href=&#34;https://github.com/MilesMcBain&#34;&gt;Miles McBain&lt;/a&gt; and the entire cohort of &lt;a href=&#34;https://ozunconf17.ropensci.org&#34;&gt;2017 rOpenSci ozunconf attendees&lt;/a&gt;. In particular, my thanks go to the organisers of such a wonderful event; &lt;a href=&#34;https://github.com/njtierney&#34;&gt;Nick Tierney&lt;/a&gt;, &lt;a href=&#34;https://github.com/robjhyndman&#34;&gt;Rob Hyndman&lt;/a&gt;, &lt;a href=&#34;https://github.com/dicook&#34;&gt;Di Cook&lt;/a&gt;, and &lt;a href=&#34;https://github.com/MilesMcBain&#34;&gt;Miles McBain&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Building Communities Together at ozunconf, 2017</title>
      <link>https://ropensci.org/blog/2017/10/31/ozunconf2017/</link>
      <pubDate>Tue, 31 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/10/31/ozunconf2017/</guid>
      <description>
        
        

&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;img src=&#34;https://njtierney.updog.co/img/ozunconf-hex-cookies.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Just last week we organised the 2nd rOpenSci &lt;a href=&#34;http://ozunconf17.ropensci.org&#34;&gt;ozunconference&lt;/a&gt;, the sibling rOpenSci unconference, held in Australia. Last year it was &lt;a href=&#34;http://auunconf.ropensci.org&#34;&gt;held in Brisbane&lt;/a&gt;, this time around, the ozunconf was hosted in Melbourne, from October 26-27, 2017.&lt;/p&gt;

&lt;p&gt;At the ozunconf, we brought together 45 R-software users and developers, scientists, and open data enthusiasts from academia, industry, government, and non-profits. Participants travelled from far and wide, with people coming from 6 cities around Australia, 2 cities in New Zealand, and one city in the USA. Before the ozunconf we discussed and dreamt up projects to work on for a few days, then met up and brought about a bakers dozen of them into reality.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://njtierney.updog.co/img/ozunconf-womens-data-discuss.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;upskilling-participants&#34;&gt;Upskilling participants&lt;/h3&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Day 0.5 of &lt;a href=&#34;https://twitter.com/hashtag/ozunconf?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ozunconf&lt;/a&gt; and an excellent intro to writing packages and using Git from &lt;a href=&#34;https://twitter.com/rdpeng?ref_src=twsrc%5Etfw&#34;&gt;@rdpeng&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://twitter.com/nj_tierney?ref_src=twsrc%5Etfw&#34;&gt;@nj_tierney&lt;/a&gt;. I enjoyed the post-it note system! &lt;a href=&#34;https://t.co/iKTbWkeCA0&#34;&gt;pic.twitter.com/iKTbWkeCA0&lt;/a&gt;&lt;/p&gt;&amp;mdash; Holly Kirk (@HollyKirk) &lt;a href=&#34;https://twitter.com/HollyKirk/status/923065587915415552?ref_src=twsrc%5Etfw&#34;&gt;October 25, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;On Day 0, one day before the ozunconf, &lt;a href=&#34;https://twitter.com/rdpeng&#34;&gt;Roger Peng&lt;/a&gt; and I ran a half day training session on how to develop R packages and share them on GitHub. The participants picked things up really quickly, and by the end of the session, everyone could make an R package, and push it to GitHub. We also introduced them to &lt;a href=&#34;https://www.youtube.com/watch?v=s3JldKoA0zw&amp;amp;feature=youtu.be&#34;&gt;the wonders of RMarkdown&lt;/a&gt;. The event then kicked on to the &lt;a href=&#34;https://www.meetup.com/R-Ladies-Melbourne/events/244102535/&#34;&gt;R-Ladies Melbourne special one year anniversary event&lt;/a&gt;, which featured a great talk and introduction to Random Forests by Elisabeth Vogel.&lt;/p&gt;

&lt;h3 id=&#34;bringing-people-together&#34;&gt;Bringing people together&lt;/h3&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Biscuit decorating at &lt;a href=&#34;https://twitter.com/hashtag/ozunconf?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ozunconf&lt;/a&gt; ! &lt;a href=&#34;https://t.co/M8PxOyRUJI&#34;&gt;pic.twitter.com/M8PxOyRUJI&lt;/a&gt;&lt;/p&gt;&amp;mdash; Nikeisha Caruana (@bluebirdi) &lt;a href=&#34;https://twitter.com/bluebirdi/status/923305923208036352?ref_src=twsrc%5Etfw&#34;&gt;October 25, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;Before the ozunconf, we discussed various ideas for projects in &lt;a href=&#34;https://github.com/ropensci/ozunconf17/issues&#34;&gt;the GitHub issues&lt;/a&gt;. Things really started to pick up in the last week and we ended up at 41 issues - almost as many issues as participants.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://njtierney.updog.co/img/ozunconf-oz-data-discuss.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Day one kicked off with decorating some hex cookies, baked by &lt;a href=&#34;https://twitter.com/visnut&#34;&gt;Di Cook&lt;/a&gt;. This uncovered a fun fact that &lt;a href=&#34;http://stefanbache.dk/&#34;&gt;Stefan Milton Bache&lt;/a&gt; - creator of the beloved pipe operator (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) from the &lt;a href=&#34;https://github.com/tidyverse/magrittr&#34;&gt;&lt;code&gt;magrittr&lt;/code&gt;&lt;/a&gt; package, apparently also created the first #rstats hex sticker.&lt;/p&gt;

&lt;p&gt;We then stuck the various projects that had been discussed throughout the week around the room and participants sticker voted on projects that they were interested in working on. Introductions were made, and quotes like these (from &lt;a href=&#34;https://twitter.com/stephdesilva&#34;&gt;Steph de Silva&lt;/a&gt;) led to entertaining discussions around data:&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&amp;quot;I&amp;#39;m 50% data hazmat, 50% data grief counselling&amp;quot; best Intro ever at &lt;a href=&#34;https://twitter.com/hashtag/ozunconf?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ozunconf&lt;/a&gt;&lt;/p&gt;&amp;mdash; Steve Bennett (@stevage1) &lt;a href=&#34;https://twitter.com/stevage1/status/923314625428336641?ref_src=twsrc%5Etfw&#34;&gt;October 25, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;We were really lucky to be in the beautiful Monash City Campus, a place that almost seems to have been designed for an unconf, with some classroom style space, as well as plenty of nooks and crannies to sit in, including an outdoor astroturfed garden complete with bean bags and native flora.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://njtierney.updog.co/img/ozunconf-earo.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The Oz colour palette gang soakin it up outside &lt;a href=&#34;https://twitter.com/hashtag/ozunconf?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ozunconf&lt;/a&gt; &lt;a href=&#34;https://t.co/XiLkhwZwTv&#34;&gt;pic.twitter.com/XiLkhwZwTv&lt;/a&gt;&lt;/p&gt;&amp;mdash; Miles McBain (@MilesMcBain) &lt;a href=&#34;https://twitter.com/MilesMcBain/status/923682409400250368?ref_src=twsrc%5Etfw&#34;&gt;October 26, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;The venue even seemed to reflect our love of hex stickers, providing a nice hex sticker themed carpet:&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Appropriately shaped carpet pattern for the &lt;a href=&#34;https://twitter.com/hashtag/ozunconf?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ozunconf&lt;/a&gt; venue &lt;a href=&#34;https://twitter.com/hashtag/hex?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#hex&lt;/a&gt; &lt;a href=&#34;https://t.co/QsbVWhCQyb&#34;&gt;pic.twitter.com/QsbVWhCQyb&lt;/a&gt;&lt;/p&gt;&amp;mdash; Holly Kirk (@HollyKirk) &lt;a href=&#34;https://twitter.com/HollyKirk/status/923420699900997632?ref_src=twsrc%5Etfw&#34;&gt;October 26, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;We had some great sponsors for this event, including &lt;a href=&#34;https://ropensci.org/&#34;&gt;rOpenSci&lt;/a&gt;, &lt;a href=&#34;http://rstudio.com/&#34;&gt;RStudio&lt;/a&gt; &lt;a href=&#34;http://r-consortium.org/&#34;&gt;The RConsortium&lt;/a&gt;, &lt;a href=&#34;https://inghaminstitute.org.au/&#34;&gt;The Ingham Institute&lt;/a&gt;, and &lt;a href=&#34;http://www.monash.edu/business&#34;&gt;Monash Business School&lt;/a&gt;. The event was also organised by &lt;a href=&#34;https://twitter.com/nj_tierney&#34;&gt;myself&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/visnut&#34;&gt;Di Cook&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/robjhyndman&#34;&gt;Rob Hyndman&lt;/a&gt;, and also &lt;a href=&#34;https://twitter.com/milesmcbain&#34;&gt;Miles McBain&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://njtierney.updog.co/img/ozunconf-hex-mat.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We wrapped up at the end of day 2, giving each projects group three minutes to debrief on their projects, using the unconf style - only the README.md (mostly!). You can &lt;a href=&#34;https://ropenscilabs.github.io/ozunconf-projects/&#34;&gt;check out all the ozunconf projects here&lt;/a&gt;, thanks to a template from &lt;a href=&#34;http://seankross.com/&#34;&gt;Sean Kross&lt;/a&gt;. Soon we will publish a series of short posts covering some of these great fun projects.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a quick taster:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ropenscilabs/realtime&#34;&gt;&lt;code&gt;realtime&lt;/code&gt;&lt;/a&gt;. Realtime streamingplots built on the p5.js library.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ropenscilabs/ozrepro&#34;&gt;&lt;code&gt;stow&lt;/code&gt;&lt;/a&gt;. A simplified version control interface to git, from within R.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ropenscilabs/icon&#34;&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/a&gt;. Easily access and insert web icons into HTML and PDF documents.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ropenscilabs/ochRe&#34;&gt;&lt;code&gt;ochRe&lt;/code&gt;&lt;/a&gt;. Provide Australia-themed Colour Palettes.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;rsquo;ll share a quick summary of all of the projects over the coming weeks.&lt;/p&gt;

&lt;h3 id=&#34;what-s-your-story&#34;&gt;What&amp;rsquo;s Your Story?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/StephdeSilva/status/923875737102200832&#34;&gt;Some key #ozunconf lessons from Steph de Silva&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The opportunity to try but not succeed is a luxury to be savoured&lt;/li&gt;
&lt;li&gt;Mistakes make you a better programmer&lt;/li&gt;
&lt;li&gt;The best thing about R isn&amp;rsquo;t the language, it&amp;rsquo;s the number of people around who want to help&lt;/li&gt;
&lt;li&gt;Your skills are valuable, so your productivity is too. Investing in the tools that maximise it is worthwhile.&lt;/li&gt;
&lt;li&gt;git really is out to get you.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A few people have already written about their unconf17 experience. Have you? Share the link in the comments below and we&amp;rsquo;ll add it here.&lt;/p&gt;

&lt;h4 id=&#34;projects-posts&#34;&gt;Projects posts&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.healthintersections.com.au/?p=2740&#34;&gt;FHIR and R: &lt;code&gt;ronfhir&lt;/code&gt;&lt;/a&gt;, by &lt;a href=&#34;http://www.healthintersections.com.au/&#34;&gt;Grahame Grieve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/blog/2017/11/14/realtime/&#34;&gt;2017 rOpenSci ozunconf :: Reflections and the &lt;code&gt;realtime&lt;/code&gt; Package&lt;/a&gt;, by &lt;a href=&#34;https://jcarroll.com.au/&#34;&gt;Jonathan Carroll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/blog/2017/11/21/ochre/&#34;&gt;&lt;code&gt;ochRe&lt;/code&gt; - Australia themed colour palettes&lt;/a&gt;, by &lt;a href=&#34;https://twitter.com/HollyKirk&#34;&gt;Holly Kirk&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/visnut&#34;&gt;Di Cook&lt;/a&gt;, &lt;a href=&#34;https://github.com/alicia-a&#34;&gt;Alicia Allan&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/ross_gayler&#34;&gt;Ross Gayler&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/rdpeng&#34;&gt;Roger Peng&lt;/a&gt;, &lt;a href=&#34;https://github.com/ellesaber&#34;&gt;Elle Saber&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;community-posts&#34;&gt;Community posts&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://simplystatistics.org/2017/10/30/how-do-you-convince-others-to-use-r/&#34;&gt;How do you convince others to use R?&lt;/a&gt;, by &lt;a href=&#34;http://www.biostat.jhsph.edu/~rpeng/&#34;&gt;Roger Peng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rex-analytics.com/failure-is-an-option/&#34;&gt;Failure Is An Option&lt;/a&gt;, by &lt;a href=&#34;https://twitter.com/StephdeSilva&#34;&gt;Steph da Silva&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;introducing-people-to-the-ropensci-community&#34;&gt;Introducing people to the rOpenSci community&lt;/h3&gt;

&lt;p&gt;rOpenSci has had a profound impact on me and my work. At the end of 2015 I got in touch with them to discuss arranging an unconference in Australia, and they welcomed me and my friends. Today, I am proud to be welcoming those from the ozunconf to this big, kind, wonderful community, and say, as Shannon Ellis summed up: &lt;a href=&#34;https://ropensci.org/blog/2017/06/23/community/&#34;&gt;&amp;ldquo;Hey! You there! You are welcome here&amp;rdquo;&lt;/a&gt;. It was also really great to have a diverse group of participants at the ozunconf, and in particular, that 40% of participants were women or other underrepresented genders.&lt;/p&gt;

&lt;h3 id=&#34;starts-not-ends&#34;&gt;Starts, not ends&lt;/h3&gt;

&lt;p&gt;One thing that I&amp;rsquo;ve realised in my involvement with organising and attending these events is that when the unconf ends, it feels a bit sad, sure, to say goodbye to the environment, the community, the friends, and the projects. At the last unconf in LA, we were sending out a stream of tweets, &amp;ldquo;&lt;a href=&#34;https://twitter.com/nj_tierney/status/868572134548713472&#34;&gt;it&amp;rsquo;s not&lt;/a&gt; &lt;a href=&#34;https://twitter.com/MilesMcBain/status/868590677843599360&#34;&gt;over&lt;/a&gt; &lt;a href=&#34;https://twitter.com/AmeliaMN/status/868605633435533312&#34;&gt;until&lt;/a&gt; &lt;a href=&#34;https://twitter.com/MilesMcBain/status/869044724086185985&#34;&gt;it&amp;rsquo;s&lt;/a&gt; &lt;a href=&#34;https://twitter.com/dataandme/status/869664700606406656&#34;&gt;over&lt;/a&gt;&amp;rdquo;. But, in reflection, standing back, taking it all in, the unconference doesn&amp;rsquo;t really end - it just starts. It starts many new things - projects, ideas, collaborations, and friendships.&lt;/p&gt;

&lt;p&gt;The ozunconf comes to an end. Now, let&amp;rsquo;s get started.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://njtierney.updog.co/img/ozunconf-group-photo.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Experiences as a first time rOpenSci package reviewer</title>
      <link>https://ropensci.org/blog/2017/09/08/first-review-experiences/</link>
      <pubDate>Fri, 08 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/09/08/first-review-experiences/</guid>
      <description>
        
        

&lt;p&gt;It all started January 26&lt;sup&gt;th&lt;/sup&gt; this year when I signed up to volunteer as
a reviewer for R packages submitted to rOpenSci. My main motivation for
wanting to volunteer was to learn something new and to
contribute to the R open source community. If you are wondering why the
people behind rOpenSci are doing this, you can read &lt;a href=&#34;https://www.numfocus.org/blog/how-ropensci-uses-code-review-to-promote-reproducible-science/&#34;&gt;How rOpenSci uses Code Review to Promote Reproducible Science&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Three months later I was contacted by &lt;a href=&#34;https://twitter.com/masalmon&#34;&gt;Maelle Salmon&lt;/a&gt; asking whether I was interested in
reviewing the R package &lt;a href=&#34;https://github.com/ropensci/patentsview&#34;&gt;&lt;code&gt;patentsview&lt;/code&gt;&lt;/a&gt; for rOpenSci. And yes, I
was! To be honest I was a little bit thrilled.&lt;/p&gt;

&lt;p&gt;The packages are submitted for review to rOpenSci via an issue to their
GitHub repository and also the reviews happen there. So you can check out
&lt;a href=&#34;https://github.com/ropensci/onboarding/issues&#34;&gt;all previous package submissions and reviews&lt;/a&gt;.
With all the information you
get from rOpenSci and also the help from the editor it is straightforward
to do the package review. Before I started I read the
reviewer guides (links below) and checked out a few of the existing
reviews. I installed the package &lt;code&gt;patentsview&lt;/code&gt; from GitHub and also
downloaded the source code so I could check out how it was implemented.&lt;/p&gt;

&lt;p&gt;I started by testing core functionality of the package by
running the examples that were mentioned in the README of the
package. I think this is a good
starting point because you get a feeling of what the author wants to
achieve with the package. Later on I came up with my
own queries (side note: this R package interacts with an API from which
you can query patents). During the process I used to switch between
writing queries like a normal user of the package
would do and checking the code. When I saw something in the code that
wasn&amp;rsquo;t quite clear to me or looked wrong I went back to writing new
queries to check whether the behavior of the methods was as expected.&lt;/p&gt;

&lt;p&gt;With this approach I was able to give feedback to the package author
which led to the inclusion of an additional unit test, a helper function
that makes the package easier to use, clarification of an error message
and an improved documentation. You can find the review I did &lt;a href=&#34;https://github.com/ropensci/onboarding/issues/112&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are several R packages that helped me get started with my review,
e.g. &lt;a href=&#34;https://github.com/hadley/devtools&#34;&gt;&lt;code&gt;devtools&lt;/code&gt;&lt;/a&gt; and
&lt;a href=&#34;https://github.com/MangoTheCat/goodpractice&#34;&gt;&lt;code&gt;goodpractice&lt;/code&gt;&lt;/a&gt;. These
packages can also help you when you start writing your own packages. An
example for a very useful method is &lt;code&gt;devtools::spell_check()&lt;/code&gt;, which
performs a spell check on the package description and on manual pages.
At the beginning I had an issue with &lt;code&gt;goodpractice::gp()&lt;/code&gt; but Maelle Salmon
(the editor) helped me resolve it.&lt;/p&gt;

&lt;p&gt;In the rest of this article you can read what I gained personally from doing a
review.&lt;/p&gt;

&lt;h3 id=&#34;contributing-to-the-open-source-community&#34;&gt;Contributing to the open source community&lt;/h3&gt;

&lt;p&gt;When people think about contributing to the open source community, the
first thought is about creating a new R package or contributing to one
of the major packages out there. But not everyone has the resources
(e.g. time) to do so. You also don&amp;rsquo;t have awesome ideas every other day
which can immediately be implemented into new R packages to be used by
the community. Besides contributing with code there are also lots of
other things than can be useful for other R users, for example writing
blog posts about problems you solved, speaking at meetups or reviewing
code to help improve it. What I like much about reviewing code is that
people see things differently and have other experiences. As a reviewer,
you see a new package from the user&amp;rsquo;s perspective which can be hard for
the programmer themselves. Having someone else
review your code helps finding things that are missing because they seem
obvious to the package author or detect code pieces that require more
testing. I had a great feeling when I finished the review, since I had
helped improve an already amazing R package a little bit more.&lt;/p&gt;

&lt;h3 id=&#34;reviewing-helps-improve-your-own-coding-style&#34;&gt;Reviewing helps improve your own coding style&lt;/h3&gt;

&lt;p&gt;When I write R code I usually try to do it in the best way possible.
&lt;a href=&#34;https://google.github.io/styleguide/Rguide.xml&#34;&gt;Google&amp;rsquo;s R Style Guide&lt;/a&gt;
is a good start to get used to coding best practice in R and I also
enjoyed reading &lt;a href=&#34;https://github.com/timoxley/best-practices&#34;&gt;Programming Best Practices
Tidbits&lt;/a&gt;. So normally
when I think some piece of code can be improved (with respect to speed,
readability or memory usage) I check online whether I can find a
better solution. Often you just don&amp;rsquo;t think something can be
improved because you always did it in a certain way or the last time you
checked there was no better solution. This is when it helps to follow
other people&amp;rsquo;s code. I do this by reading their blogs, following many R
users on Twitter and checking their GitHub account. Reviewing an R
package also helped me a great deal with getting new ideas because I
checked each function a lot more carefully than when I read blog posts.
In my opinion, good code does not only use the best package for each
problem but also the small details are well implemented. One thing I
used to do wrong for a long time was filling of data.frames until I
found a better (much faster)
&lt;a href=&#34;https://stackoverflow.com/a/29419402&#34;&gt;solution on stackoverflow&lt;/a&gt;.
And with respect to this you
can learn a lot from someone else&amp;rsquo;s code. What I found really cool in
the package I reviewed was the usage of small helper functions (see
&lt;a href=&#34;https://github.com/ropensci/patentsview/blob/c03e1ab2537873d7a9b76025b0072953efb475c1/R/utils.R&#34;&gt;utils.R&lt;/a&gt;).
Functions like &lt;code&gt;paste0_stop&lt;/code&gt; and &lt;code&gt;paste0_message&lt;/code&gt; make the rest of the
code a lot easier to read.&lt;/p&gt;

&lt;h3 id=&#34;good-start-for-writing-your-own-packages&#34;&gt;Good start for writing your own packages&lt;/h3&gt;

&lt;p&gt;When reviewing an R package, you check the code like a really observant
user. I noticed many things that you usually don&amp;rsquo;t care about when using
an R package, like comments, how helpful the documentation and the
examples are, and also how well unit tests cover the code. I think that
reviewing a few good packages can prepare you very well for writing your
own packages.&lt;/p&gt;

&lt;h3 id=&#34;do-you-want-to-contribute-to-ropensci-yourself&#34;&gt;Do you want to contribute to rOpenSci yourself?&lt;/h3&gt;

&lt;p&gt;If I motivated you to become an rOpenSci reviewer, please sign up! Here
is a list of useful things if you want to become an rOpenSci reviewer
like me.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://ropensci.org/onboarding/&#34;&gt;Form to sign up (just takes a minute)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://onboarding.ropensci.org/&#34;&gt;Information for reviewers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://mozillascience.github.io/codeReview/review.html&#34;&gt;Mozilla reviewing guide&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;While writing this blog post I found a nice article about &lt;a href=&#34;http://www.tidyverse.org/articles/2017/08/contributing/&#34;&gt;contributing
to the tidyverse&lt;/a&gt; which is
mostly also applicable to other R packages in my opinion.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are generally interested in either submitting or reviewing an R package, I would like to invite you to the &lt;a href=&#34;https://ropensci.org/blog/blog/2017/08/31/comm-call-v14&#34;&gt; Community Call on rOpenSci software review and onboarding&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Community Call - rOpenSci Software Review and Onboarding</title>
      <link>https://ropensci.org/blog/2017/08/31/comm-call-v14/</link>
      <pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/08/31/comm-call-v14/</guid>
      <description>
        
        

&lt;p&gt;Are you thinking about submitting a package to rOpenSci&amp;rsquo;s open peer software review? Considering volunteering to review for the first time? Maybe you&amp;rsquo;re an experienced package author or reviewer and have ideas about how we can improve.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Join our &lt;a href=&#34;https://github.com/ropensci/commcalls/issues/15&#34;&gt;Community Call on Wednesday, September 13th&lt;/a&gt;&lt;/strong&gt;. We want to get your feedback and we&amp;rsquo;d love to answer your questions!&lt;/p&gt;

&lt;h3 id=&#34;agenda&#34;&gt;Agenda&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Welcome (Stefanie Butland, rOpenSci Community Manager, 5 min)&lt;/li&gt;
&lt;li&gt;guest: Noam Ross, editor (15 min)
Noam will give an overview of the rOpenSci software review and onboarding, highlighting the role editors play and how decisions are made about policies and changes to the process.&lt;/li&gt;
&lt;li&gt;guest: Andee Kaplan, reviewer (15 min)
Andee will give her perspective as a package reviewer, sharing specifics about her workflow and her motivation for doing this.&lt;/li&gt;
&lt;li&gt;Q &amp;amp; A (25 min, moderated by Noam Ross)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;speaker-bios&#34;&gt;Speaker bios&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Andee Kaplan&lt;/strong&gt; is a Postdoctoral Fellow at Duke University. She is a recent PhD graduate from the Iowa State University Department of Statistics, where she learned a lot about R and reproducibility by developing a class on data stewardship for Agronomists. Andee has reviewed multiple (two!) packages for rOpenSci, &lt;a href=&#34;https://github.com/ropensci/onboarding/issues/107&#34;&gt;&lt;code&gt;iheatmapr&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/ropensci/onboarding/issues/58&#34;&gt;&lt;code&gt;getlandsat&lt;/code&gt;&lt;/a&gt;, and hopes to one day be on the receiving end of the review process.&lt;/p&gt;

&lt;p&gt;Andee on &lt;a href=&#34;https://github.com/andeek&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/andeekaplan&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Noam Ross&lt;/strong&gt; is one of rOpenSci&amp;rsquo;s four editors for software peer review. Noam is a Senior Research Scientist at EcoHealth Alliance in New York, specializing in mathematical modeling of disease outbreaks, as well as training and standards for data science and reproducibility. Noam earned his Ph.D. in Ecology from the University of California-Davis, where he founded the Davis R Users&amp;rsquo; Group.&lt;/p&gt;

&lt;p&gt;Noam on &lt;a href=&#34;https://github.com/noamross&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/noamross&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;resources&#34;&gt;Resources&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.numfocus.org/blog/how-ropensci-uses-code-review-to-promote-reproducible-science/&#34;&gt;How rOpenSci uses Code Review to Promote Reproducible Science&lt;/a&gt;; blog post Aug 11, 2017&lt;/li&gt;
&lt;li&gt;The what, why and how of &lt;a href=&#34;http://onboarding.ropensci.org/&#34;&gt;rOpenSci open peer review and onboarding&lt;/a&gt;; guidelines&lt;/li&gt;
&lt;li&gt;rOpenSci &lt;a href=&#34;https://github.com/ropensci/onboarding/issues&#34;&gt;software reviews in progress and completed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/packages/&#34;&gt;rOpenSci onboarded packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read on &lt;a href=&#34;https://ropensci.org/blog/&#34;&gt;our blog&lt;/a&gt; one of ten guest posts (to date) by authors of onboarded packages&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/blog/blog/2017/08/22/first-package-review&#34;&gt;So you (don&amp;rsquo;t) think you can review a package&lt;/a&gt;; guest blog post by first-time reviewer Mara Averick, Aug 22, 2017&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/blog/blog/2016/03/28/software-review&#34;&gt;Onboarding at rOpenSci: A Year in Reviews&lt;/a&gt;; blog post Mar 28, 2016&lt;/li&gt;
&lt;li&gt;Soon after the Community Call, we&amp;rsquo;ll post the &lt;a href=&#34;https://vimeo.com/ropensci/videos&#34;&gt;video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Tesseract and Magick: High Quality OCR in R</title>
      <link>https://ropensci.org/technotes/2017/08/17/tesseract-16/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/technotes/2017/08/17/tesseract-16/</guid>
      <description>
        
        

&lt;p&gt;Last week we released an update of the tesseract package to CRAN. This package provides R bindings to Google&amp;rsquo;s OCR library &lt;a href=&#34;https://en.wikipedia.org/wiki/Tesseract_(software)&#34;&gt;Tesseract&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;tesseract&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The new version ships with the latest libtesseract 3.05.01 on Windows and MacOS. Furthermore it includes enhancements for managing language data and using tesseract together with the magick package.&lt;/p&gt;

&lt;h2 id=&#34;installing-language-data&#34;&gt;Installing Language Data&lt;/h2&gt;

&lt;p&gt;The new version has several improvements for installing additional language data. On Windows and MacOS you use the &lt;code&gt;tesseract_download()&lt;/code&gt; function to install additional languages:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tesseract_download(&amp;quot;fra&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Language data are now stored in &lt;code&gt;rappdirs::user_data_dir(&#39;tesseract&#39;)&lt;/code&gt; which makes it persist across updates of the package. To OCR french text:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;french &amp;lt;- tesseract(&amp;quot;fra&amp;quot;)
text &amp;lt;- ocr(&amp;quot;https://jeroen.github.io/images/french_text.png&amp;quot;, engine = french)
cat(text)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Très Bien! Note that on Linux you should not use &lt;code&gt;tesseract_download&lt;/code&gt; but instead install languages using apt-get (e.g. &lt;a href=&#34;https://packages.debian.org/testing/tesseract-ocr-fra&#34;&gt;tesseract-ocr-fra&lt;/a&gt;) or yum (e.g. &lt;a href=&#34;https://apps.fedoraproject.org/packages/tesseract-langpack-fra&#34;&gt;tesseract-langpack-fra&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&#34;tesseract-and-magick&#34;&gt;Tesseract and Magick&lt;/h2&gt;

&lt;p&gt;The tesseract developers &lt;a href=&#34;https://github.com/tesseract-ocr/tesseract/wiki/ImproveQuality&#34;&gt;recommend&lt;/a&gt; to clean up the image before OCR&amp;rsquo;ing it to improve the quality of the output. This involves things like cropping out the text area, rescaling, increasing contrast, etc.&lt;/p&gt;

&lt;p&gt;The rOpenSci &lt;a href=&#34;https://ropensci.org/blog/blog/2017/08/15/magick-10&#34;&gt;magick&lt;/a&gt; package is perfectly suitable for this task. The latest version contains a convenient wrapper &lt;code&gt;image_ocr()&lt;/code&gt; that works with pipes.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;devtools::install_github(&amp;quot;ropensci/magick&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s give it a try on some &lt;a href=&#34;https://courses.cs.vt.edu/csonline/AI/Lessons/VisualProcessing/OCRscans.html&#34;&gt;example scans&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://courses.cs.vt.edu/csonline/AI/Lessons/VisualProcessing/OCRscans_files/bowers.jpg&#34; alt=&#34;example&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Requires devel version of magick
# devtools::install_github(&amp;quot;ropensci/magick&amp;quot;)

# Test it
library(magick)
library(magrittr)

text &amp;lt;- image_read(&amp;quot;https://courses.cs.vt.edu/csonline/AI/Lessons/VisualProcessing/OCRscans_files/bowers.jpg&amp;quot;) %&amp;gt;%
  image_resize(&amp;quot;2000&amp;quot;) %&amp;gt;%
  image_convert(colorspace = &#39;gray&#39;) %&amp;gt;%
  image_trim() %&amp;gt;%
  image_ocr()

cat(text)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;The Llfe and Work of
Fredson Bowers
by
G. THOMAS TANSELLE

N EVERY FIELD OF ENDEAVOR THERE ARE A FEW FIGURES WHOSE ACCOM-
plishment and inﬂuence cause them to be the symbols of their age;
their careers and oeuvres become the touchstones by which the
ﬁeld is measured and its history told. In the related pursuits of
analytical and descriptive bibliography, textual criticism, and scholarly
editing, Fredson Bowers was such a ﬁgure, dominating the four decades
after 1949, when his Principles of Bibliographical Description was pub-
lished. By 1973 the period was already being called “the age of Bowers”:
in that year Norman Sanders, writing the chapter on textual scholarship
for Stanley Wells&#39;s Shakespeare: Select Bibliographies, gave this title to
a section of his essay. For most people, it would be achievement enough
to rise to such a position in a ﬁeld as complex as Shakespearean textual
studies; but Bowers played an equally important role in other areas.
Editors of ninetcemh-cemury American authors, for example, would
also have to call the recent past “the age of Bowers,&amp;quot; as would the writers
of descriptive bibliographies of authors and presses. His ubiquity in
the broad ﬁeld of bibliographical and textual study, his seemingly com-
plete possession of it, distinguished him from his illustrious predeces-
sors and made him the personiﬁcation of bibliographical scholarship in

his time.

\Vhen in 1969 Bowers was awarded the Gold Medal of the Biblio-
graphical Society in London, John Carter’s citation referred to the
Principles as “majestic,&amp;quot; called Bowers&#39;s current projects “formidable,&amp;quot;
said that he had “imposed critical discipline&amp;quot; on the texts of several
authors, described Studies in Bibliography as a “great and continuing
achievement,&amp;quot; and included among his characteristics &amp;quot;uncompromising
seriousness of purpose” and “professional intensity.&amp;quot; Bowers was not
unaccustomed to such encomia, but he had also experienced his share of
attacks: his scholarly positions were not universally popular, and he
expressed them with an aggressiveness that almost seemed calculated to
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Not bad but not perfect. Can you do a better job?&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Chat with the rOpenSci team at upcoming meetings</title>
      <link>https://ropensci.org/blog/2017/08/11/ropensci-at-meetings/</link>
      <pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/08/11/ropensci-at-meetings/</guid>
      <description>
        
        &lt;p&gt;You can find members of the rOpenSci team at various meetings and workshops around the world. Come say &amp;lsquo;hi&amp;rsquo;, learn about how our &lt;a href=&#34;https://ropensci.org/packages/&#34;&gt;packages&lt;/a&gt; can enable your research, or about our &lt;a href=&#34;https://github.com/ropensci/onboarding&#34;&gt;onboarding&lt;/a&gt; process for contributing new packages, discuss software &lt;a href=&#34;https://ropensci.org/blog/blog/2016/05/25/software-sustanability-ropensci&#34;&gt;sustainability&lt;/a&gt; or tell us how we can help you do open and reproducible research.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;where-s-ropensci&#34;&gt;Where&amp;rsquo;s rOpenSci?&lt;/h3&gt;

&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
    &lt;th style=&#34;text-align:left;&#34;&gt;When&lt;/th&gt;
    &lt;th style=&#34;text-align:left;&#34;&gt;&lt;a href=&#34;https://ropensci.org/about/#team&#34;&gt;Who&lt;/a&gt;&lt;/th&gt;
    &lt;th style=&#34;text-align:left;&#34;&gt;Where&lt;/th&gt;
    &lt;th style=&#34;text-align:left;&#34;&gt;What&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
    &lt;td&gt;Aug 7, 2017&lt;/td&gt;
    &lt;td&gt;Scott Chamberlain, Carl Boettiger, Noam Ross&lt;/td&gt;
    &lt;td&gt;Portland, OR&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;http://www.esa.org/portland/&#34;&gt;Ecological Society of America Annual Meeting&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Aug 8, 2017&lt;/td&gt;
    &lt;td&gt;Karthik Ram&lt;/td&gt;
    &lt;td&gt;Baltimore, MD&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://webcast.stsci.edu/webcast/detail.xhtml;jsessionid=26CCC422B4D65C9671F8FE1ED3D55423?talkid=5823&amp;parent=1&#34;&gt;Space Telescope Science Institute Engineering Colloquium&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Sep 12-14, 2017&lt;/td&gt;
    &lt;td&gt;Jenny Bryan&lt;/td&gt;
    &lt;td&gt;London, UK&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://earlconf.com/london/&#34;&gt;EARL Conference&lt;/a&gt;; &lt;a href=&#34;https://www.meetup.com/rladies-london/&#34;&gt;R-Ladies London&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Sep 19-20, 2017&lt;/td&gt;
    &lt;td&gt;Jenny Bryan&lt;/td&gt;
    &lt;td&gt;San Francisco, CA&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://www.rstudio.com/workshops/extending-the-tidyverse/&#34;&gt;Extending the tidyverse&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Oct 1-4, 2017&lt;/td&gt;
    &lt;td&gt;Scott Chamberlain&lt;/td&gt;
    &lt;td&gt;Ottawa, CA&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://tdwg.github.io/conferences/2017/&#34;&gt;TDWG Annual Conference&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Oct 10-11, 2017&lt;/td&gt;
    &lt;td&gt;Karthik Ram, Stefanie Butland&lt;/td&gt;
    &lt;td&gt;Austin, TX&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://www.numfocus.org/&#34;&gt;NumFOCUS Summit&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Oct 19-21, 2017&lt;/td&gt;
    &lt;td&gt;Jenny Bryan&lt;/td&gt;
    &lt;td&gt;La Jolla, CA&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://ww2.amstat.org/meetings/wsds/2017/&#34;&gt;Women in Statistics and Data Science Conference&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Oct 26-27, 2017&lt;/td&gt;
    &lt;td&gt;TBD&lt;/td&gt;
    &lt;td&gt;Melbourne, AU&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://njtierney.typeform.com/to/RzeQVp&#34;&gt;2nd Annual rOpenSci AU-Unconf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Nov 7-10, 2017&lt;/td&gt;
    &lt;td&gt;Scott Chamberlain&lt;/td&gt;
    &lt;td&gt;Durham, NC&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;http://phenoscape.org/&#34;&gt;Phenoscape Hackathon&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Dec 8-9, 2017&lt;/td&gt;
    &lt;td&gt;Stefanie Butland&lt;/td&gt;
    &lt;td&gt;Washington, DC&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://www.aaas.org/cefp/meet-our-fellows&#34;&gt;AAAS Community Engagement Fellows meeting&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Dec 10-14, 2017&lt;/td&gt;
    &lt;td&gt;Jenny Bryan&lt;/td&gt;
    &lt;td&gt;Auckland, NZ&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;http://www.stats.org.nz/events-archive/2017-nzsa-conference&#34;&gt;IASC-ARS/NZSA Conference&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Dec 11, 2017&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://ropensci.org/blog/blog/2016/12/12/ropensci-fellowship-zoon&#34;&gt;Nick Golding&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;Ghent, BE&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;http://www.britishecologicalsociety.org/events/annual-meeting-2017/workshop-submissions/&#34;&gt;Workshop: Developing R Packages for Accessing, Synthesizing and Analysing Ecological Data&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
      </description>
    </item>
    
    <item>
      <title>Unconf 2017: The Roads Not Taken</title>
      <link>https://ropensci.org/blog/2017/08/08/unconfroadsnottaken/</link>
      <pubDate>Tue, 08 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/08/08/unconfroadsnottaken/</guid>
      <description>
        
        

&lt;p&gt;Since June, we have been highlighting the &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/08/unconf_recap_4&#34;&gt;many projects&lt;/a&gt; that emerged from this year&amp;rsquo;s &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/02/unconf2017&#34;&gt;rOpenSci Unconf&lt;/a&gt;. These projects start many weeks before unconf participants gather in-person. Each year, we ask participants to propose and discuss project ideas ahead of time in a &lt;a href=&#34;https://github.com/ropensci/unconf17/issues&#34;&gt;GitHub repo&lt;/a&gt;. This serves to get creative juices flowing as well as help people get to know each other a bit through discussion.&lt;/p&gt;

&lt;p&gt;This year wasn&amp;rsquo;t just our biggest unconf ever, it was the biggest in terms of proposed ideas! We had more proposals than participants, so we had a great pool to draw from when we got down to work in L.A. Yet many good ideas were left on the cutting room floor. Here we highlight some of those ideas we didn&amp;rsquo;t quite get to. Many have lots of potential and we hope the R and rOpenSci communities take them up!&lt;/p&gt;

&lt;h3 id=&#34;api-interfaces&#34;&gt;API Interfaces&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Many of our data access packages interface with web APIs, and our community has some ideas on how to &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/85&#34;&gt;make these easier&lt;/a&gt; and &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/25&#34;&gt;improve testing&lt;/a&gt; of these types of packages.&lt;/li&gt;
&lt;li&gt;Both &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/14&#34;&gt;Amazon Web Services&lt;/a&gt; and &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/70&#34;&gt;Google Cloud&lt;/a&gt; APIs already have API wrappers, but in other languages (e.g., Java, Go), that could be wrapped to make R packages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-tools&#34;&gt;Development tools&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;There were lots of ideas of how to extend package testing and test coverage, such as measuring &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/2&#34;&gt;how much of package code is documented&lt;/a&gt; in examples and vignettes, and unit testing for and test coverage &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/3&#34;&gt;for imported functions&lt;/a&gt;, to make sure package dependencies are behaving as expected. Also, improving frameworks for &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/90&#34;&gt;performance testing&lt;/a&gt;, so as to measure performance improvement or regression as an R package develops.&lt;/li&gt;
&lt;li&gt;Documentation and discoverability are always close to our hearts, so it is no surprise we had proposals to &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/41&#34;&gt;promote more linkages in package metadata&lt;/a&gt;, &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/44&#34;&gt;more package-level man pages&lt;/a&gt;, &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/83&#34;&gt;richer HTML help pages&lt;/a&gt;, and of course, &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/58&#34;&gt;badges&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;The RStudio crowd has some ideas to &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/52&#34;&gt;make autocompletion extensible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A tool for &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/59&#34;&gt;reminding people about deadlines&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data-access&#34;&gt;Data Access&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;We&amp;rsquo;ve got a lot of folks who are interested in lakes and two ideas for &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/21&#34;&gt;accessing&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Despite having five &lt;a href=&#34;https://open.nasa.gov/explore/datanauts/&#34;&gt;NASA datanauts&lt;/a&gt; at the unconf, we didn&amp;rsquo;t get around to making &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/67&#34;&gt;this package to access NASA data&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Utility rates are a messy kind of data that could use &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/94&#34;&gt;open data standards&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/unconf17/issues/79&#34;&gt;Historical correspondence data&lt;/a&gt; would be really cool to have available through an R data package.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;reproducibility&#34;&gt;Reproducibility&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;There are some thorny issues around &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/22&#34;&gt;namespacing&lt;/a&gt; and &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/23&#34;&gt;provenance&lt;/a&gt; that could use some attention.&lt;/li&gt;
&lt;li&gt;Integrating testing into scripts is a topic of much interest to the community, with recent packages like &lt;a href=&#34;https://ropensci.org/blog/blog/2017/04/11/assertr&#34;&gt;assertr&lt;/a&gt; and &lt;a href=&#34;https://github.com/ropenscilabs/testrmd&#34;&gt;testrmd&lt;/a&gt;, but what about creating field-specific test standards, like &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/37&#34;&gt;assertions for biological data&lt;/a&gt;?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;training&#34;&gt;Training&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;There are a lot of topics out there that could use good tutorials and training approaches, like &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/32&#34;&gt;software licensing&lt;/a&gt;, getting involved in a &lt;a href=&#34;perhaps by addressing [first-timer issues]&#34;&gt;GitHub projects&lt;/a&gt;, or learning good coding &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/75&#34;&gt;patterns&lt;/a&gt; and &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/26&#34;&gt;antipatterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;publishing&#34;&gt;Publishing&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;How should R users handle &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/86&#34;&gt;reviewing and commenting&lt;/a&gt; R-Markdown documents.&lt;/li&gt;
&lt;li&gt;What&amp;rsquo;s the right &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/51&#34;&gt;blend&lt;/a&gt; of vignettes, R markdown templates, and parameterized reports for getting new learners up and running?&lt;/li&gt;
&lt;li&gt;One of the things we hope to do more of is enable scientists to publish and get credit for their software and data. How about &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/24&#34;&gt;automating software citation&lt;/a&gt;, or packages for auto-submission to &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/46&#34;&gt;software&lt;/a&gt; or &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/87&#34;&gt;data&lt;/a&gt; journals?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;it-s-your-turn&#34;&gt;It&amp;rsquo;s Your Turn&lt;/h3&gt;

&lt;p&gt;Interested in pursuing one of these ideas? Pick up on the discussion in the project&amp;rsquo;s &lt;a href=&#34;https://github.com/ropensci/unconf17/issues&#34;&gt;GitHub repo&lt;/a&gt; and the friendly people there will welcome your contributions!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Announcing the rOpenSci Fellowships Program</title>
      <link>https://ropensci.org/blog/2017/07/06/ropensci-fellowships/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/07/06/ropensci-fellowships/</guid>
      <description>
        
        

&lt;p&gt;rOpenSci&amp;rsquo;s mission is to promote a culture of open, transparent, and reproducible research across various research domains. Everything we do, from developing high-quality open-source software for data science and, &lt;a href=&#34;https://github.com/ropensci/onboarding#ropensci-onboarding&#34;&gt;software review&lt;/a&gt;, to building community through events like our &lt;a href=&#34;https://github.com/ropensci/commcalls/issues&#34;&gt;community calls&lt;/a&gt; and &lt;a href=&#34;http://unconf17.ropensci.org/&#34;&gt;annual unconference&lt;/a&gt; are all geared toward lowering barriers to reproducible, open science.&lt;/p&gt;

&lt;p&gt;The rOpenSci Fellowship presents a unique opportunity for researchers who are engaged in open source to have a bigger voice in their communities. These fellowships are designed to support individual researchers and collaborative efforts to help them do better science, build community around projects or best practices, or develop some tools as part of ongoing research that could impact one or more research domains. Two areas that are of particular interest to us are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Reproducibility&lt;/strong&gt;
The first type of fellowship we seek to support includes any activities (software development, best practices, guidelines) that promote reproducibility with one or more research communities. Funds from this fellowship can be used for activities such as finishing development of software, documentation or developing guidelines and best practices around methods and approaches. Your proposal will need to clearly identify how these funds will impact others in your research community and beyond.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Working groups&lt;/strong&gt;
The second type of activity we seek to support is working groups, based on &lt;a href=&#34;https://www.nceas.ucsb.edu/system/files/HamptonParker_BioSci_2011.pdf&#34;&gt;a highly successful problem-solving model&lt;/a&gt; pioneered by the &lt;a href=&#34;https://www.nceas.ucsb.edu/&#34;&gt;National Center for Ecological Analysis and Synthesis&lt;/a&gt;. You propose a critical challenge in the area of scientific open source and reproducibility, and a team of experts, to collaborate intensively for a week at a time. The knowledge and insight your team develops must be broadly relevant to the research community.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our first fellowship was awarded to &lt;a href=&#34;https://ropensci.org/blog/blog/2016/12/12/ropensci-fellowship-zoon&#34;&gt;Dr. Nick Golding&lt;/a&gt; in suppport of a reproducibility project. Each fellowship will be in the range of $30,000 to $50,000.  We plan to award 2-3 fellowships (exact number to be determined by the size, scope, and quality of applications we receive) in 2017. We expect to have a similar call in 2018. All successful fellows will also receive additional travel support to participate in our &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/02/unconf2017&#34;&gt;annual unconference&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;fellowship-eligibility-and-criteria&#34;&gt;Fellowship eligibility and criteria&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Fellows must be affiliated with a research institution.&lt;/li&gt;
&lt;li&gt;You must have Principal Investigator (PI) status at your institution to receive funds from this fellowship. If you do not have PI status, or do not expect to have PI status by the time these funds are disbursed, you will need to collaborate with someone who can fulfill this role. For this stage of the application, you will only need to list your status and if necessary, the name of person who will serve as your PI. We will request a formal letter of support in a later round.&lt;/li&gt;
&lt;li&gt;Fellowship recipients must strive to spend all funds within a year of the start date. While we are able to accommodate extensions for exceptional circumstances, we strongly prefer to support projects that are scoped well enough to be completed within one year.&lt;/li&gt;
&lt;li&gt;Funds can only be used to support personnel and travel. We do not allow purchase of equipment, or computing services. A detailed budget will be required in the final round.&lt;/li&gt;
&lt;li&gt;Funds cannot be used to organize conferences or hackathons.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;fellowship-selection-committee&#34;&gt;Fellowship selection committee&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://ropensci.org/about/#team&#34;&gt;&lt;strong&gt;Karthik Ram&lt;/strong&gt;&lt;/a&gt;, Committee Chair
Karthik is a co-founder of rOpenSci and the project lead. Karthik is also a fellow at the Berkeley Institute for Data Science and the Berkeley Initiative in Global Change Biology at UC Berkeley. Prior to joining Berkeley, he earned his PhD in ecology &amp;amp; evolution from the University of California, Davis. Karthik&amp;rsquo;s interests are focused on reproducible research, especially as it applies to global change. Much of his recent work focuses on building tools and services around open data and growing diverse data science communities.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www2.stat.duke.edu/~mc301/&#34;&gt;&lt;strong&gt;Mine Cetinkaya-Rundel&lt;/strong&gt;&lt;/a&gt;, Duke University
Mine is Associate Professor of the Practice at Duke University and a Professional Educator at RStudio. Her work focuses on innovation in statistics pedagogy, with an emphasis on computation, reproducible research, open-source education, and student-centered learning. She is the author of three open-source introductory statistics textbooks as part of the OpenIntro project and teaches the popular Statistics with R MOOC on Coursera.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.kenbenoit.net/&#34;&gt;&lt;strong&gt;Ken Benoit&lt;/strong&gt;&lt;/a&gt;, London School of Economics
Kenneth Benoit is Professor of Quantitative Social Research Methods at the London School of Economics and Political Science. He is active in data science and natural language processing and quantitative text analysis for social research. He is the creator of the quanteda, readtext, and spacyr R packages for text analysis.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.nceas.ucsb.edu/ecoinfo#team&#34;&gt;&lt;strong&gt;Matthew Jones&lt;/strong&gt;&lt;/a&gt;, National Center for Ecological Analysis and Synthesis
Matt is the Director of Research and Informatics at the National Center for Ecological Analysis and Synthesis and has spent more than a decade developing various global data sharing infrastructure projects such as the KNB Repository and the DataONE federation.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://dicook.org/&#34;&gt;&lt;strong&gt;Di Cook&lt;/strong&gt;&lt;/a&gt;,  Monash University
Di is Professor of Business Analytics at Monash University in Australia. Her expertise is in data visualisation, exploratory data analysis, and interactive graphics. She is an Ordinary Member of the R Foundation and a Fellow of the American Statistical Association.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;applying-for-the-fellowship&#34;&gt;Applying for the fellowship&lt;/h2&gt;

&lt;p&gt;To apply, please submit a 3-page proposal that describes your goals, expected outcomes, a tentative timeline, collaborators, and a very high level budget (no more than a paragraph or two) at &lt;a href=&#34;https://ropensci.org/fellowships&#34;&gt;ropensci.org/fellowships&lt;/a&gt;. As part of your submission form, you will also have to provide details about your affiliation, PI status, and the name of your PI (if you cannot serve in that role). For applicants that make the short list, we will request a detailed budget and may also ask for additional clarification.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Application deadline is September 1, 2017 (midnight PST).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Questions about the fellowship are welcome at fellowships@ropensci.org&lt;/p&gt;

&lt;p&gt;Expect a FAQ page shortly as we receive questions.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Introducing our Postdoctoral Fellow, Dr. Dan Sholler</title>
      <link>https://ropensci.org/blog/2017/06/30/postdoc_dan_sholler/</link>
      <pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/06/30/postdoc_dan_sholler/</guid>
      <description>
        
        

&lt;p&gt;We are pleased to welcome our Postdoctoral Fellow, &lt;a href=&#34;https://danielsholler.wordpress.com/&#34;&gt;Dr. Dan Sholler&lt;/a&gt;. Dan is an expert in qualitative research (yes, you read that correctly) and studies digital infrastructure creation, growth, and maintenance efforts. Through this research interest, he was drawn to the open science community and its ongoing development of tools and communities to support sustainable, reproducible, high-quality research. With rOpenSci, he intends to investigate &lt;em&gt;what drives scientists to engage with or resist open science tools and communities&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Dan will be the first postdoc for the rOpenSci project, based at UC Berkeley and the &lt;a href=&#34;https://bids.berkeley.edu/&#34;&gt;Berkeley Institute for Data Science&lt;/a&gt;, supervised by Karthik Ram and co-supervised by &lt;a href=&#34;https://ropensci.org/about/#team&#34;&gt;Carl Boettiger&lt;/a&gt; and &lt;a href=&#34;http://danielskatz.org/&#34;&gt;Daniel Katz&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/piOAomv.jpg&#34; alt=&#34;Dr Dan Sholler&#34; align=&#34;left&#34; style=&#34;margin: 0px 20px&#34; width=&#34;250&#34; style=&#34;float: left;clear:both&#34;&gt;&lt;/p&gt;

&lt;p&gt;We interviewed Dan to introduce you to him and his research (a fascinating conversation!). This short introduction can’t do him justice, but he&amp;rsquo;ll share his research plan in another post in Fall 2017.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;q-tell-us-a-bit-about-your-background&#34;&gt;Q: Tell us a bit about your background&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;m a (mostly) qualitative, ethnographic researcher who studies user acceptance, resistance, and adaptation in digital infrastructure development programs. In other words, I like to study the factors that motivate people to engage with or resist new technologies, with the goal of helping to improve design and implementation strategies for eliciting engagement.&lt;/p&gt;

&lt;p&gt;I completed my B.A. in &lt;a href=&#34;https://hss.sas.upenn.edu/undergraduate/science-technology-and-society-major&#34;&gt;Science, Technology and Society at University of Pennsylvania&lt;/a&gt;. During that time, I learned that technologies don’t just succeed or fail based on their merit; instead, a host of social and political factors play influential roles in determining technological outcomes. My Ph.D. research at the &lt;a href=&#34;https://www.ischool.utexas.edu/&#34;&gt;University of Texas School of Information&lt;/a&gt; under &lt;a href=&#34;https://www.dianebailey.me/&#34;&gt;Dr. Diane Bailey&lt;/a&gt; involved looking at contemporary deployments of new information technologies in developing countries, in government agencies, and in healthcare clinics. Alongside my research, I took courses in organizational theory, organizational behaviour, and information systems, sparking my interest in studying how organizational IT persist and become robust, or fail in the face of resistance from users during the implementation and use phases.&lt;/p&gt;

&lt;p&gt;Sometimes, the unanticipated actions users take actually help an IT implementation to succeed. In the first study I participated in at UT with Dr. Bailey, we looked at a new branchless banking system intended to allow rural Brazilians to receive welfare benefits and pay utility bills without journeying to bank branches in major cities (think a network of simplified ATMs). The plan was to place point-of-service machines in places like grocery stores and post offices and allow clients to access self-service features. However, most of the clients were unable to use the machines themselves due to low technical literacy and they often encountered technical errors they couldn’t resolve. The owners and clerks in the shops took on new roles to fill the gap between the design of the technology and the reality of the situation: Elderly clients often handed over PINs; customers facing issues asked the shopkeepers to get in contact with the bank or utility companies; and some shop owners even borrowed money from their own registers to cover benefit checks when the system was down. All of these role-expanding actions ensured that the branchless system persisted.&lt;/p&gt;

&lt;p&gt;In other cases, users’ reactions to a new implementation can lead to implementation failure. In my dissertation work, I found that doctors actively resisted and impeded a federally-mandated implementation of electronic medical records (EMR) in the U.S. healthcare industry. Clinics implemented “certified” EMR and had their costs partially subsidized by the federal government. In the study, I found that doctors were frustrated with the extra time they spent using EMR, particularly because it added little perceived benefit to patient treatment. Through interviews and observations, I learned that doctors could not affect any technological change within their local organizations because of strict federal policies. Through actions like lobbying Congress, holding town hall meetings, and voicing the medical community’s concerns in public outlets, the American Medical Association effectively stalled the progression of the federal program, which remains in jeopardy today.&lt;/p&gt;

&lt;p&gt;I want to leverage my experience to explore how and why scientists engage with or resist open science communities and technologies, focusing on how particular communities like rOpenSci manage engagement and resistance to ensure positive outcomes. In turn, I hope to contribute to our understanding of best-practices for open science infrastructure development, including what community leaders, users, universities, government agencies, and other actors can do to develop robust infrastructures.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;q-what-would-you-like-to-accomplish-with-your-postdoc&#34;&gt;Q: What would you like to accomplish with your postdoc?&lt;/h3&gt;

&lt;p&gt;Just like any other academic postdoc, I plan to publish papers - in my case, examining the development of open science communities - and draw upon theories that might help to understand engagement and resistance. I intend to apply what I learn from the project and advise rOpenSci (and other open science communities) about strategies for anticipating, dealing with, and overcoming issues related to user engagement and/or resistance.&lt;/p&gt;

&lt;p&gt;I’ll strive to gain a deeper understanding of the open science movement, focusing first on general questions like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;“What drives community leaders to devote time and resources to building a robust infrastructure to support open science?&lt;/li&gt;
&lt;li&gt;What social and technical circumstances support or stand in the way of infrastructure development?&lt;/li&gt;
&lt;li&gt;What managerial strategies might be applied to get scientists to engage or to help them deal with the perceived detriments of participating in the open science community?”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To answer these questions, I’ll conduct a qualitative, comparative study of multiple open science communities, beginning with rOpenSci. In the study, I’ll interview and observe the leaders of these communities and the scientists who (a) actively engage with the open science tools produced by the communities and (b) might stand to benefit from the use of the tools, but instead resist use. I plan to evaluate the managerial strategies used across the communities. Focusing on multiple communities will assist the effort to generalize my findings to the broader open science movement. Throughout the study, I’ll consider the following prominent issues identified in the literature on digital infrastructure development, open science, open data, and related areas of study:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Organizational motivations for building open science infrastructures and communities&lt;/li&gt;
&lt;li&gt;The need for balance between flexibility and standardization in managing users and their behaviors&lt;/li&gt;
&lt;li&gt;Best practices for creating infrastructures and managing their growth, including both technical and social elements&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;q-how-do-you-arrive-at-doing-qualitative-research-in-an-environment-full-of-quantitative-researchers&#34;&gt;Q: How do you arrive at doing qualitative research in an environment full of quantitative researchers?&lt;/h3&gt;

&lt;p&gt;I first heard about rOpenSci through a member of my dissertation committee, &lt;a href=&#34;https://www.ischool.utexas.edu/people/person_details?PersonID=175&#34;&gt;Dr. James Howison&lt;/a&gt;, while at UT-Austin. James is a renowned researcher of scientific software issues, including topics like software citation and attribution in academic journals. He worked with members of the rOpenSci community and clued me into the ongoing development of open science infrastructures. Additionally, I had also heard from my peers about &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/02/unconf2017&#34;&gt;rOpenSci’s annual unconference&lt;/a&gt; and its novel approach to building technical and social capacity in the R community.&lt;/p&gt;

&lt;p&gt;The open science community has no shortage of exciting, innovative software tools to support scientific research. However, time and again, authors recognize that perhaps the biggest impediment to the widespread use of these tools is eliciting engagement from users who aren’t software developers themselves or who are hesitant to open their methods and data to the broader scientific community. I think my research will support efforts to expand infrastructure participation to these scientists by uncovering what their concerns and hesitations may be and considering how we might begin to address them, both through technical design and social approaches.&lt;/p&gt;

&lt;p&gt;The rOpenSci community, to me, is an ideal place to carry out a qualitative research project with quantitative researchers. Although many other communities exist and have their own merits, rOpenSci has quickly and effectively engaged an interdisciplinary community of researchers and produced tools with immediate impacts. Studying this community and comparing it to related communities will aid in understanding what makes rOpenSci’s approach so effective. I believe that drawing out lessons about managing engagement can be applied to other communities and benefit the open science community as a whole.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;want-to-learn-more-about-dan-sholler&#34;&gt;Want to learn more about Dan Sholler?&lt;/h3&gt;

&lt;p&gt;Read Dan’s publications on &lt;a href=&#34;https://scholar.google.com/citations?user=fHVPc94AAAAJ&amp;amp;hl=en&amp;amp;oi=ao&#34;&gt;Google Scholar&lt;/a&gt;
&lt;br&gt;
Follow &lt;a href=&#34;https://twitter.com/dansholler&#34;&gt;Dan on Twitter&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Unconf projects 5: mwparser, Gargle, arresteddev</title>
      <link>https://ropensci.org/blog/2017/06/09/unconf_recap_5/</link>
      <pubDate>Fri, 09 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/06/09/unconf_recap_5/</guid>
      <description>
        
        

&lt;p&gt;And finally, we end our series of &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/02/unconf2017&#34;&gt;unconf&lt;/a&gt; project summaries (&lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/05/unconf_recap_1&#34;&gt;day 1&lt;/a&gt;, &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/06/unconf_recap_2&#34;&gt;day 2&lt;/a&gt;, &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/07/unconf_projects_3&#34;&gt;day 3&lt;/a&gt;, &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/08/unconf_recap_4&#34;&gt;day 4&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&#34;mwparser&#34;&gt;&lt;code&gt;mwparser&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;  Wikimarkup is the language used on Wikipedia and similar projects, and as such contains a lot of valuable data both for scientists studying collaborative systems and people studying things documented on or in Wikipedia. mwparser parses wikimarkup, allowing a user to filter down to specific types of tags such as links or templates, and then extract components of those tags.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; Oliver Keyes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/Ironholds/mwparser&#34;&gt;https://github.com/Ironholds/mwparser&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;gargle&#34;&gt;&lt;code&gt;Gargle&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt; Gargle is a library that provides authentication for Google APIs but without all the agonizing pain. The package provides helper functions (for &lt;code&gt;httr&lt;/code&gt;) to support automatic retries, paging, and progress bars for API calls.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; Craig Citro&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/r-lib/gargle&#34;&gt;https://github.com/r-lib/gargle&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;arresteddev&#34;&gt;&lt;code&gt;arresteddev&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt; This package is designed to help troubleshoot errors that come up during package and analysis development. As of now, the package helps track tracebacks and errors but more functionality is planned for the future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; Lucy D&amp;rsquo;Agostino McGowan, Karthik Ram, Miles McBain&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/arresteddev&#34;&gt;https://github.com/ropenscilabs/arresteddev&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Unconf projects 4: cityquant, notary, packagemetrics, pegax</title>
      <link>https://ropensci.org/blog/2017/06/08/unconf_recap_4/</link>
      <pubDate>Thu, 08 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/06/08/unconf_recap_4/</guid>
      <description>
        
        

&lt;p&gt;Continuing our series of blog posts (&lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/05/unconf_recap_1&#34;&gt;day 1&lt;/a&gt;, &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/06/unconf_recap_2&#34;&gt;day 2&lt;/a&gt;, &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/07/unconf_projects_3&#34;&gt;day 3&lt;/a&gt;) this week about &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/02/unconf2017&#34;&gt;unconf 17&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;cityquant&#34;&gt;&lt;code&gt;cityquant&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;  The goal with the &lt;code&gt;cityquant&lt;/code&gt; project was to build a digital dashboard for sustainable cities.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://sustainsb.github.io/images/scores_flower-plot_sbcounty.png&#34; alt=&#34;sustain&#34; /&gt;&lt;/p&gt;

&lt;p&gt;They also had a &amp;ldquo;spin-off&amp;rdquo; project called &lt;a href=&#34;https://github.com/maczokni/selfquant&#34;&gt;selfquant&lt;/a&gt; to get data from a quantified self google sheets template to keep track of weekly performance in various categories.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; &lt;a href=&#34;https://github.com/maczokni&#34;&gt;Reka Solymosi&lt;/a&gt;, &lt;a href=&#34;https://github.com/bbest&#34;&gt;Ben Best&lt;/a&gt;, &lt;a href=&#34;https://github.com/chursaner&#34;&gt;Chelsea Ursaner&lt;/a&gt;, &lt;a href=&#34;https://github.com/timphan&#34;&gt;Tim Phan&lt;/a&gt;, &lt;a href=&#34;https://github.com/jasdumas&#34;&gt;Jasmine Dumas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/cityquant&#34;&gt;https://github.com/ropenscilabs/cityquant&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;notary&#34;&gt;&lt;code&gt;notary&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt; &lt;code&gt;notary&lt;/code&gt; is actually two things:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;notary&lt;/code&gt;: An R package for signing and verification of R packages. It has functions for installing and verifying packages, validating GitHub releases, sourcing files with verification, and more.&lt;/p&gt;

&lt;!-- ![notary](/assets/blog-images/2017-06-08-unconf_recap_4/notarylogo.png) --&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-06-08-unconf_recap_4/notarylogo.png&#34; width=&#34;300&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r-security-practices&lt;/code&gt;: A &lt;a href=&#34;https://ropenscilabs.github.io/r-security-practices/index.html&#34;&gt;bookdown book&lt;/a&gt; targeting users, developers, and admins on R security best practices.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-06-08-unconf_recap_4/rsecuritybook.png&#34; alt=&#34;securitybook&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; &lt;a href=&#34;https://github.com/stephlocke&#34;&gt;Stephanie Locke&lt;/a&gt;, &lt;a href=&#34;https://github.com/Ironholds&#34;&gt;Oliver Keyes&lt;/a&gt;, &lt;a href=&#34;https://github.com/richfitz&#34;&gt;Rich FitzJohn&lt;/a&gt;, &lt;a href=&#34;https://github.com/hrbrmstr&#34;&gt;Bob Rudis&lt;/a&gt;, &lt;a href=&#34;https://github.com/jeroen&#34;&gt;Joroen Ooms&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/notary&#34;&gt;https://github.com/ropenscilabs/notary&lt;/a&gt; / &lt;a href=&#34;https://github.com/ropenscilabs/r-security-practices&#34;&gt;https://github.com/ropenscilabs/r-security-practices&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;packagemetrics&#34;&gt;&lt;code&gt;packagemetrics&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;  &lt;code&gt;packagemetrics&lt;/code&gt; is a package for helping you choose which package to use. Their tool collects metrics including CRAN downloads, GitHub stars, whether it&amp;rsquo;s tidyverse compatible, whether it has tests and vignettes, number of contributors, and more!&lt;/p&gt;

&lt;p&gt;This project combined two ideas from our brainstorming stage: &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/78&#34;&gt;Avoiding redundant / overlapping packages&lt;/a&gt; and &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/69&#34;&gt;A framework for reproducible tables&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-06-08-unconf_recap_4/pkgmetrics.png&#34; alt=&#34;packagemetrics&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; &lt;a href=&#34;https://github.com/eringrand&#34;&gt;Erin Grand&lt;/a&gt;, &lt;a href=&#34;https://github.com/sfirke&#34;&gt;Sam Firke&lt;/a&gt;, &lt;a href=&#34;https://github.com/hfrick&#34;&gt;Hannah Frick&lt;/a&gt;, &lt;a href=&#34;https://github.com/bzkrouse&#34;&gt;Becca Krouse&lt;/a&gt;, &lt;a href=&#34;https://github.com/lshep&#34;&gt;Lori Shepherd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/packagemetrics&#34;&gt;https://github.com/ropenscilabs/packagemetrics&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;pegax&#34;&gt;&lt;code&gt;pegax&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;  &lt;code&gt;pegax&lt;/code&gt; is a very alpha client for parsing taxonomic names. Taxonomic names are things such as &lt;em&gt;Homo sapiens&lt;/em&gt; (human beings) &lt;a href=&#34;https://species.wikimedia.org/wiki/Homo_sapiens&#34;&gt;wikispecies&lt;/a&gt;, or &lt;em&gt;Ursus americanus&lt;/em&gt; (american black bear) &lt;a href=&#34;https://species.wikimedia.org/wiki/Ursus_americanus&#34;&gt;wikispecies&lt;/a&gt;, or &lt;em&gt;Balaenoptera musculus&lt;/em&gt; (blue whale) &lt;a href=&#34;https://species.wikimedia.org/wiki/Balaenoptera_musculus&#34;&gt;wikispecies&lt;/a&gt;. Taxonomic names can be hard to parse - and thus something called &lt;a href=&#34;https://en.wikipedia.org/wiki/Parsing_expression_grammar&#34;&gt;Parsing Expression Grammar (PEG)&lt;/a&gt; can be employed to help. We were lucky that Oliver Keyes just started an R package for PEGs in R called &lt;a href=&#34;https://github.com/Ironholds/piton&#34;&gt;piton&lt;/a&gt; - which is now used in &lt;code&gt;pegax&lt;/code&gt; to parse taxonomic names.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-06-08-unconf_recap_4/pegax.png&#34; alt=&#34;plot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/sckott&#34;&gt;Scott Chamberlain&lt;/a&gt; (with help from &lt;a href=&#34;https://github.com/kellobri&#34;&gt;Oliver Keyes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/pegax&#34;&gt;https://github.com/ropenscilabs/pegax&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Unconf projects 3: available, miner, rcheatsheet, ponyexpress</title>
      <link>https://ropensci.org/blog/2017/06/07/unconf_projects_3/</link>
      <pubDate>Wed, 07 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/06/07/unconf_projects_3/</guid>
      <description>
        
        

&lt;p&gt;Continuing our series of blog posts (&lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/05/unconf_recap_1&#34;&gt;day 1&lt;/a&gt;, &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/06/unconf_recap_2&#34;&gt;day 2&lt;/a&gt;) this week about &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/02/unconf2017&#34;&gt;unconf 17&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;available&#34;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;  Ever have trouble naming your software package? Find a great name and realize it&amp;rsquo;s already taken on CRAN, or further along in development on GitHub? The &lt;code&gt;available&lt;/code&gt; package makes it easy to check for valid, available names, and also checks various sources for any unintended meanings. The package can also suggest names based on the description and title of your package.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/k6J5hQr.png&#34; alt=&#34;available Package&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; Jim Hester, Carl Ganz, Gábor Csárdi, Molly Lewis, Rachel Tatman&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/available&#34;&gt;https://github.com/ropenscilabs/available&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;miner&#34;&gt;&lt;code&gt;miner&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;
The &lt;code&gt;miner&lt;/code&gt; package provides a nice interface to the Minecraft API and allows users to manipulate the Minecraft world from a few simple functions. The package is designed with the intention of encouraging new users to learn R by writing scripts to automate activities inside Minecraft.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=zggCAYAfjXE&#34; title=&#34;ggplot2 with Minecraft&#34;&gt;&lt;img src=&#34;https://i.imgur.com/G0PComZ.png&#34; alt=&#34;Inserting ggplots into MineCraft&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; Brooke Anderson, Karl Broman, Gergely Daróczi, Mario Inchiosa, David Smith, Ali Zaidi&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/EBVkz7G.jpg&#34; alt=&#34;miner team&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ROpenSciLabs/miner&#34;&gt;https://github.com/ROpenSciLabs/miner&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;rcheatsheet&#34;&gt;&lt;code&gt;rcheatsheet&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;  RStudio pioneered the idea of having beautiful cheatsheets for R packages. Creating them however, is quite time consuming and requires effort to maintain as packages evolve.  The &lt;code&gt;rcheatsheet&lt;/code&gt; package makes it easy for any package author to quickly generate beautiful cheatsheets from a simple table stored on a Google sheet or a local table. This short slide deck provides a &lt;a href=&#34;https://gitpitch.com/ramnathv/rcheatsheet/master?grs=github&amp;amp;t=moon&#34;&gt;quick overview&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/JUC3Ljh.gif&#34; alt=&#34;R cheat sheet&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; Diana Ly, Ramnath Vaidyanathan&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/rcheatsheet&#34;&gt;https://github.com/ropenscilabs/rcheatsheet&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;ponyexpress&#34;&gt;&lt;code&gt;ponyexpress&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;
Need to write custom emails to a large group of people? &lt;code&gt;ponyexpress&lt;/code&gt; makes it possible to create custom emails based on various fields of a data frame (final grades for a class, abstract acceptances for a workshop, project assignments for a hackathon, or just about anything else) and quickly sends them from your Gmail account.&lt;/p&gt;

&lt;p&gt;The package also provides custom template to make it easy to write rich html emails.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; Karthik Ram, Lucy D&amp;rsquo;Agostino McGowan&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/ponyexpress&#34;&gt;https://github.com/ropenscilabs/ponyexpress&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Unconf projects 2: checkers, gramr, data-packages, exploRingJSON</title>
      <link>https://ropensci.org/blog/2017/06/06/unconf_recap_2/</link>
      <pubDate>Tue, 06 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/06/06/unconf_recap_2/</guid>
      <description>
        
        

&lt;p&gt;Following up on Stefanie&amp;rsquo;s recap of &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/02/unconf2017&#34;&gt;unconf 17&lt;/a&gt;, we are following up this entire week with summaries of projects developed at the event. We plan to highlight 4-5 projects each day, with detailed posts from a handful of teams to follow.&lt;/p&gt;

&lt;h2 id=&#34;checkers&#34;&gt;&lt;code&gt;checkers&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;  &lt;code&gt;checkers&lt;/code&gt; is a framework for reviewing analysis projects. It provides automated checks for best practices, using extensions on the goodpractice package.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-06-06-unconf_recap_2/checkers_version_control.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In addition, checkers includes a &lt;a href=&#34;https://docs.google.com/document/d/1OYcWJUk-MiM2C1TIHB1Rn6rXoF5fHwRX-7_C12Blx8g/edit#&#34;&gt;descriptive guide for best practices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-06-06-unconf_recap_2/compendium.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ldecicco-USGS&#34;&gt;Laura DeCicco&lt;/a&gt;, &lt;a href=&#34;https://github.com/noamross&#34;&gt;Noam Ross&lt;/a&gt;, &lt;a href=&#34;https://github.com/adaish&#34;&gt;Alice Daish&lt;/a&gt;, &lt;a href=&#34;https://github.com/mllewis&#34;&gt;Molly Lewis&lt;/a&gt;, &lt;a href=&#34;https://github.com/nistara&#34;&gt;Nistara Randhawa&lt;/a&gt;, &lt;a href=&#34;https://github.com/jenniferthompson&#34;&gt;Jennifer Thompson&lt;/a&gt;, &lt;a href=&#34;https://github.com/njtierney&#34;&gt;Nicholas Tierney&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/checkers&#34;&gt;https://github.com/ropenscilabs/checkers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;gramr&#34;&gt;&lt;code&gt;gramr&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt; &lt;code&gt;gramr&lt;/code&gt; is a package that wraps the command line tool &lt;a href=&#34;https://github.com/btford/write-good&#34;&gt;write-good&lt;/a&gt; to provide grammar checking functions for Rmd or md documents. It can be used as an RStudio Addin, or from the console or command line by supplying an Rmd or md filename.&lt;/p&gt;

&lt;p&gt;p.s. Two of the three (Ben/Gordon) were remote participants.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-06-06-unconf_recap_2/gramr.png&#34; alt=&#34;plot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; &lt;a href=&#34;https://github.com/jasdumas&#34;&gt;Jasmine Dumas&lt;/a&gt;, &lt;a href=&#34;https://github.com/benmarwick&#34;&gt;Ben Marwick&lt;/a&gt;, &lt;a href=&#34;https://github.com/GShotwell&#34;&gt;Gordon Shotwell&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/gramr&#34;&gt;https://github.com/ropenscilabs/gramr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;data-packages&#34;&gt;&lt;code&gt;data-packages&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;  The &lt;code&gt;data-packages&lt;/code&gt; team created a suite of outputs, including a flexdashboard with a searchable table to query dataset metadata.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-06-06-unconf_recap_2/pkg.png&#34; alt=&#34;datapackages&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In addition, the team created a &lt;a href=&#34;https://docs.google.com/document/d/1xhJmt0v4p49jpwINNak9N7AMMb5yohTwwNOXH8WzqqQ/edit#heading=h.7qg6st1kgh5x&#34;&gt;best practices document for data packages&lt;/a&gt;, a Twitter bot &lt;a href=&#34;https://twitter.com/rstatsdata&#34;&gt;@rstatsdata&lt;/a&gt; that tweets about datasets in R packages on CRAN, and they have plans for &lt;a href=&#34;https://github.com/ropenscilabs/data-packages#potential-future-work&#34;&gt;future work&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; &lt;a href=&#34;https://github.com/Nowosad&#34;&gt;Jakub Nowosad&lt;/a&gt;, &lt;a href=&#34;https://github.com/ateucher&#34;&gt;Andy Teucher&lt;/a&gt;, &lt;a href=&#34;https://github.com/jsta&#34;&gt;Joseph Stachelek&lt;/a&gt;, &lt;a href=&#34;https://github.com/richierocks&#34;&gt;Richie Cotton&lt;/a&gt;, &lt;a href=&#34;https://github.com/cvitolo&#34;&gt;Claudia Vitolo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/data-packages&#34;&gt;https://github.com/ropenscilabs/data-packages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;exploringjson&#34;&gt;&lt;code&gt;exploRingJSON&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;  The &lt;code&gt;exploRingJSON&lt;/code&gt; project includes a &lt;a href=&#34;https://github.com/ropenscilabs/exploRingJSON#survey-of-json-affiliated-r-packages&#34;&gt;survey of R packages that deal with JSON data&lt;/a&gt;, a package (&lt;a href=&#34;https://github.com/sctyner/JSOmetaN&#34;&gt;https://github.com/sctyner/JSOmetaN&lt;/a&gt;) to get high level metadata for JSON data, and a Shiny app to explore JSON.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-06-06-unconf_recap_2/applistview.png&#34; alt=&#34;plot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/sctyner&#34;&gt;Sam Tyner&lt;/a&gt;, &lt;a href=&#34;https://github.com/kellobri&#34;&gt;Kelly O&amp;rsquo;Briant&lt;/a&gt;, &lt;a href=&#34;https://github.com/drscranto&#34;&gt;Katherine Scranton&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/exploRingJSON&#34;&gt;https://github.com/ropenscilabs/exploRingJSON&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Unconf projects 1: skimr, emldown, testrmd, webrockets</title>
      <link>https://ropensci.org/blog/2017/06/05/unconf_recap_1/</link>
      <pubDate>Mon, 05 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/06/05/unconf_recap_1/</guid>
      <description>
        
        

&lt;p&gt;Following up on Stefanie&amp;rsquo;s recap of &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/02/unconf2017&#34;&gt;unconf 17&lt;/a&gt;, we are following up this entire week with summaries of projects developed at the event. We plan to highlight 4-5 projects each day, with detailed posts from a handful of teams to follow.&lt;/p&gt;

&lt;h2 id=&#34;skimr&#34;&gt;&lt;code&gt;skimr&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;  &lt;code&gt;skimr&lt;/code&gt;, a package inspired by Hadley Wickham&amp;rsquo;s &lt;a href=&#34;https://github.com/hadley/precis&#34;&gt;precis package&lt;/a&gt;, aims to provide summary statistics iteratively and interactively as part of a pipeline. The package provides easily skimmable summary statistics to help you better understand your data and see what is missing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/abwJOHh.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt;
Amelia McNamara, Eduardo Arino de la Rubia, Hao Zhu, Julia Lowndes, Shannon Ellis, Elin Waring, Michael Quinn, Hope McLeod&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/cqPh8pk.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/skimr&#34;&gt;https://github.com/ropenscilabs/skimr&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;emldown&#34;&gt;&lt;code&gt;emldown&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt; &lt;code&gt;emldown&lt;/code&gt; is a package for creating a helpful website based on EML metadata. Ecological Metadata Language (EML) is a metadata specification developed by the ecology discipline and for the ecology discipline. EML is implemented as a series of XML document types that can by used in a modular and extensible manner to document ecological data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; Maëlle Salmon, Kara Woo, Andrew McDonald, Carl Boettiger&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/emldown&#34;&gt;https://github.com/ropenscilabs/emldown&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;testrmd&#34;&gt;&lt;code&gt;testrmd&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;  &lt;code&gt;testrmd&lt;/code&gt; provides facilities to enable testing of and reporting on tested R Markdown chunks. When running R Markdown documents as part of a workflow where the data are likely to change with each render, &lt;code&gt;testrmd&lt;/code&gt; ensures that each chunk will alert the reader to any problems that may arise as a result of such subtle changes in data.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/ropenscilabs/testrmd/raw/master/testrmd.gif&#34; alt=&#34;testRmd&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt; Mara Averick, Christopher Tull, Joe Cheng, Robert Flight&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/testrmd&#34;&gt;https://github.com/ropenscilabs/testrmd&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;webrockets&#34;&gt;&lt;code&gt;webrockets&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;  The &lt;code&gt;webrockets&lt;/code&gt; package implements a basic websocket listener in R. The implementation draws heavily on &lt;a href=&#34;https://twitter.com/hrbrmstr&#34;&gt;@hrbrmstr&amp;rsquo;s&lt;/a&gt; wrapper of &lt;code&gt;easywsclient&lt;/code&gt; in &lt;a href=&#34;https://github.com/ropenscilabs/decapitated&#34;&gt;https://github.com/ropenscilabs/decapitated&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Miles McBain, Alicia Schep, Carl Ganz, Bob Rudis, Henrik Bengtsson, Joe Cheng&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/ropenscilabs/webrockets&#34;&gt;https://github.com/ropenscilabs/webrockets&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Bringing Together People and Projects at Unconf17</title>
      <link>https://ropensci.org/blog/2017/06/02/unconf2017/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/06/02/unconf2017/</guid>
      <description>
        
        

&lt;p&gt;We held our &lt;a href=&#34;http://unconf17.ropensci.org/&#34;&gt;4th annual unconference&lt;/a&gt; in Los Angeles, May 25-26, 2017. Scientists, R-software users and developers, and open data enthusiasts from academia, industry, government, and non-profits came together for two days to hack on projects they dreamed up and to give our online community an opportunity to connect in-person.&lt;/p&gt;

&lt;p&gt;The result? 70 people from 7 countries on 3 continents proposed 69 ideas leading to 21 projects in 2 days, and one awesome community just upped its game!&lt;/p&gt;

&lt;h3 id=&#34;look-what-we-made&#34;&gt;Look What We Made!&lt;/h3&gt;

&lt;p&gt;&lt;img title=&#34;unconf17 rOpenSci stickers. Photo (c) Nistara Randawa&#34; src=&#34;https://ropensci.org/assets/blog-images/2017-06-01-unconf17/ropensci-unconf17-stickers.jpg&#34; width=&#34;15%&#34; align=&#34;left&#34;&gt;&lt;/p&gt;

&lt;p&gt;People proposed and discussed &lt;a href=&#34;https://github.com/ropensci/unconf17/issues/&#34;&gt;project ideas in GitHub issues&lt;/a&gt; in the weeks leading up to the unconf to the point that we had almost as many project ideas as participants. On the morning of Day 1, people sticker-voted for projects they’d like to work on in order to reduce the number under consideration. After some brief discussions and self-sorting, teams settled in to work around the &lt;a href=&#34;http://www.crosscamp.us/site/locations/cross-campus-downtown-la.html&#34;&gt;Cross Campus DTLA&lt;/a&gt; co-working space for the next day and a half.&lt;/p&gt;

&lt;!---&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-06-01-unconf17/ropensci-unconf17-whiteboard1.jpg&#34; width=&#34;40%&#34; align=&#34;left&#34;&gt;---&gt;

&lt;p&gt;&lt;img title=&#34;unconf17 Research Compendium. Photo (c) Jennifer Thompson&#34; src=&#34;https://ropensci.org/assets/blog-images/2017-06-01-unconf17/ropensci-unconf17-whiteboard2_960_720.jpg&#34; width=&#34;36%&#34;  align=&#34;left&#34;&gt;
&lt;img title=&#34;unconf17 working groups. Photo (c) Karthik Ram&#34; src=&#34;https://ropensci.org/assets/blog-images/2017-06-01-unconf17/ropensci-unconf17-workgroups_1620_1080.jpg&#34; width=&#34;40%&#34;&gt;&lt;/p&gt;

&lt;p&gt;Not only did our funders and sponsors - &lt;a href=&#34;http://helmsleytrust.org/&#34;&gt;Helmsley Charitable Trust&lt;/a&gt;, &lt;a href=&#34;https://sloan.org/&#34;&gt;Alfred P. Sloan Foundation&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/en-us/cloud-platform/r-server&#34;&gt;Microsoft&lt;/a&gt;, &lt;a href=&#34;https://www.google.com/&#34;&gt;Google&lt;/a&gt;, &lt;a href=&#34;https://www.datacamp.com/&#34;&gt;DataCamp&lt;/a&gt;, and &lt;a href=&#34;https://www.numfocus.org/&#34;&gt;NumFOCUS&lt;/a&gt; - help us make this happen, but representatives from Microsoft, Google and DataCamp fully participated in unconf projects!&lt;/p&gt;

&lt;p&gt;Near the end of Day 2, each group had three minutes with the mic to report on their projects with only their README.md to use as presentation material. The code for all projects is available at &lt;a href=&#34;https://github.com/ropenscilabs&#34;&gt;ropenscilabs&lt;/a&gt;, our “in-development” home on GitHub. Thanks to &lt;a href=&#34;https://github.com/seankross&#34;&gt;Sean Kross&lt;/a&gt;, you can easily &lt;a href=&#34;https://ropenscilabs.github.io/runconf17-projects/&#34;&gt;browse all unconf17 projects&lt;/a&gt;. Soon we&amp;rsquo;ll publish a series of short posts covering all of them.&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;For a FULL LIST of &lt;a href=&#34;https://twitter.com/hashtag/runconf17?src=hash&#34;&gt;#runconf17&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&#34;&gt;#rstats&lt;/a&gt; projects here is a link (including awesome emojis) 📦🎉⭐️💻&lt;a href=&#34;https://t.co/FsoOu5gUAr&#34;&gt;https://t.co/FsoOu5gUAr&lt;/a&gt; &lt;a href=&#34;https://t.co/gHbZOfBNTV&#34;&gt;pic.twitter.com/gHbZOfBNTV&lt;/a&gt;&lt;/p&gt;&amp;mdash; Alice Data (@alice_data) &lt;a href=&#34;https://twitter.com/alice_data/status/868336229992890368&#34;&gt;May 27, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;Here&amp;rsquo;s a sample:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ropenscilabs/skimr&#34;&gt;&lt;code&gt;skimr&lt;/code&gt;&lt;/a&gt; is a package that provides tidy summary statistics directly from a pipe. The outputs are generic and allow users to quickly understand their data and learn what is missing.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ropenscilabs/notary&#34;&gt;&lt;code&gt;notary&lt;/code&gt;&lt;/a&gt; is an R package that verifies the integrity of R packages so that a user only installs signed releases. The package also verifies release signatures.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ropenscilabs/emldown&#34;&gt;&lt;code&gt;emldown&lt;/code&gt;&lt;/a&gt; provides a way to easily visualize complex markup from the Ecological Metadata Language. The package generates summary html using Twitter bootstrap and provides summary information about the data, temporal + spatial coverage, data tables, units and more.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ropenscilabs/checkers&#34;&gt;&lt;code&gt;checkers&lt;/code&gt;&lt;/a&gt; is a framework for reviewing analysis projects. It provides both automated checks for best practises as well as a descriptive guide for best practices.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We shared brief summaries of ALL projects in a series of five posts:
- &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/05/unconf_recap_1&#34;&gt;skimr, emldown, testrmd, webrockets&lt;/a&gt;
- &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/06/unconf_recap_2&#34;&gt;checkers, gramr, data-packages, exploRingJSON&lt;/a&gt;
- &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/07/unconf_projects_3&#34;&gt;available, miner, rcheatsheet, ponyexpress&lt;/a&gt;
- &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/08/unconf_recap_4&#34;&gt;cityquant, notary, packagemetrics, pegax&lt;/a&gt;
- &lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/09/unconf_recap_5&#34;&gt;mwparser, Gargle, arresteddev&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;community-is-one-of-rstats-best-assets&#34;&gt;Community is One of #rstats Best Assets&lt;/h3&gt;

&lt;p&gt;As rOpenSci&amp;rsquo;s Community Manager, my favorite aspects of unconf17 were watching connections being made between people, hearing them reflect on their (context-dependent) place in the R community, and being able to step back and support community-focussed discussions and activities initiated by the participants themselves! There are so many community-minded people flying under the radar, I can&amp;rsquo;t afford to name just a few.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-cards=&#34;hidden&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Join the lunchtime &lt;a href=&#34;https://twitter.com/hashtag/runconf17?src=hash&#34;&gt;#runconf17&lt;/a&gt; discussion about the &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&#34;&gt;#rstats&lt;/a&gt; communities - what do we need to do to improve? &lt;a href=&#34;https://t.co/ztbXxNfqU7&#34;&gt;pic.twitter.com/ztbXxNfqU7&lt;/a&gt;&lt;/p&gt;&amp;mdash; Alice Data (@alice_data) &lt;a href=&#34;https://twitter.com/alice_data/status/868198529134510080&#34;&gt;May 26, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Speaking of awesome community, &lt;a href=&#34;https://rladies.org/&#34;&gt;R-Ladies&lt;/a&gt; - a world-wide organization to promote gender diversity in the R community - was incredibly well-represented by founders of the global organization as well as of local chapters.&lt;/p&gt;

&lt;p&gt;&lt;img title=&#34;unconf17 R-Ladies. Photo (c) Nistara Randawa&#34; src=&#34;https://ropensci.org/assets/blog-images/2017-06-01-unconf17/ropensci-unconf17-rladies.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;rOpenSci aims to help people see what they can be. Over 45% of participants were women or other underrepresented genders. With an aim of reducing barriers to participation, we covered the cost up front for anyone who requested it.&lt;/p&gt;

&lt;h3 id=&#34;what-s-your-story&#34;&gt;What&amp;rsquo;s Your Story?&lt;/h3&gt;

&lt;p&gt;Several people have already written about their unconf17 experience. Have you? Share the link in the comments below and we&amp;rsquo;ll add it here.&lt;/p&gt;

&lt;h4 id=&#34;projects-posts&#34;&gt;Projects posts&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dataimpact.co.uk/2017/05/25/ropensci-runconf17-checker-project/&#34;&gt;rOpenSci #runconf17 : checker project&lt;/a&gt;, by Alice Daish&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/20/checkers&#34;&gt;Tackling the Research Compendium at #runconf17&lt;/a&gt;, by Noam Ross, Alice Daish, Laura DeCicco, Molly Lewis, Nistara Randhawa, Jennifer Thompson, Nick Tierney&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/27/packagemetrics&#34;&gt;packagemetrics - Helping you choose a package since #runconf17&lt;/a&gt;, by Becca Krouse, Erin Grand, Hannah Frick, Lori Shepherd, Sam Firke, William Ampeh&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/blog/blog/2017/07/05/webrockets&#34;&gt;Launching webrockets at runconf17&lt;/a&gt;, by Alicia Schep, Miles McBain&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/blog/blog/2017/07/11/skimr&#34;&gt;skimr for useful and tidy summary statistics&lt;/a&gt;, by Eduardo Arino de la Rubia, Shannon Ellis, Julia Stewart Lowndes, Hope McLeod, Amelia McNamara, Michael Quinn, Elin Waring, Hao Zhu&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/blog/blog/2017/07/25/notary&#34;&gt;notary - Signing &amp;amp; Verification of R Packages&lt;/a&gt;, by Rich FitzJohn, Oliver Keyes, Stephanie Locke, Jeroen Ooms, Bob Rudis&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/blog/blog/2017/08/01/emldown&#34;&gt;emldown - From machine readable EML metadata to a pretty documentation website&lt;/a&gt;, by Maëlle Salmon, Andrew MacDonald, Kara Woo, Carl Boettiger, Jeff Hollister&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/blog/blog/2017/08/08/unconfroadsnottaken&#34;&gt;Unconf 2017: The Roads Not Taken&lt;/a&gt;, by Noam Ross&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;community-posts&#34;&gt;Community posts&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ropensci.org/blog/blog/2017/06/23/community&#34;&gt;Hey! You there! You are welcome here&lt;/a&gt;, by Shannon Ellis&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rud.is/b/2017/05/28/l-a-unconf-idential-a-k-a-an-ropensci-runconf17-retrospective/&#34;&gt;L.A. Unconf-idential : a.k.a. an rOpenSci #runconf17 Retrospective&lt;/a&gt;, by Bob Rudis&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jasdumas.github.io/2017-05-28-runconf17-experience/&#34;&gt;My Experience at the 2017 rOpenSci Unconference. &lt;sup&gt;13&lt;/sup&gt;&amp;frasl;&lt;sub&gt;10&lt;/sub&gt;, would attend again!&lt;/a&gt;, by Jasmine Dumas&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://seankross.com/2017/06/07/A-Year-of-rOpenScis-Unconf.html&#34;&gt;A Year of rOpenSci&amp;rsquo;s Unconf&lt;/a&gt;, by Sean Kross&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.revolutionanalytics.com/2017/05/runconf17.html&#34;&gt;Reflections on rOpenSci Unconference 2017&lt;/a&gt;, by David Smith&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kbroman.org/blog/2017/05/27/ropensci-unconf-2017/&#34;&gt;rOpenSci Unconf 2017&lt;/a&gt;, by Karl Broman&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://livefreeordichotomize.com/2017/06/03/runconf17-an-analysis-of-emoji-use/&#34;&gt;runconf17, an analysis of emoji use&lt;/a&gt;, by Lucy McGowan&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://maraaverick.netlify.com/2017/06/ceci-n-est-pas-un-conf/&#34;&gt;Ceci n&amp;rsquo;est pas un conf.&lt;/a&gt;, by Mara Averick&lt;/li&gt;
&lt;li&gt;Sense the enthusiasm for what happened via the Twitter hashtag: &lt;a href=&#34;https://twitter.com/search/?q=%23runconf17&#34;&gt;#runconf17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get a taste of the unconf interactions from Karthik Ram&amp;rsquo;s &lt;a href=&#34;https://storify.com/_inundata/4th-annual-ropensci-unconf&#34;&gt;storify of unconf17 tweets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I know that unconf17 had a big impact on many people, including me. Our vibrant example of walking the talk of being welcoming, creative, respectful and supportive - all while being &lt;a href=&#34;#look-what-we-made&#34;&gt;wildly productive&lt;/a&gt; - is bound to have a lasting impact on the R community in general.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-cards=&#34;hidden&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Thank you all you wonderful people who participated in &lt;a href=&#34;https://twitter.com/hashtag/runconf17?src=hash&#34;&gt;#runconf17&lt;/a&gt; ! &lt;a href=&#34;https://t.co/8fxEhC5zDG&#34;&gt;pic.twitter.com/8fxEhC5zDG&lt;/a&gt;&lt;/p&gt;&amp;mdash; rOpenSci (@rOpenSci) &lt;a href=&#34;https://twitter.com/rOpenSci/status/868539206842187776&#34;&gt;May 27, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;img title=&#34;unconf17 group. Photo (c) Karthik Ram&#34; src=&#34;https://ropensci.org/assets/blog-images/2017-06-01-unconf17/ropensci-unconf17-group.jpg&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Chat with the rOpenSci team at upcoming meetings</title>
      <link>https://ropensci.org/blog/2017/05/01/ropensci-at-meetings/</link>
      <pubDate>Mon, 01 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/05/01/ropensci-at-meetings/</guid>
      <description>
        
        &lt;p&gt;You can find members of the rOpenSci team at various meetings and workshops around the world. Come say &amp;lsquo;hi&amp;rsquo;, learn about how our &lt;a href=&#34;https://ropensci.org/packages/&#34;&gt;packages&lt;/a&gt; can enable your research, or about our &lt;a href=&#34;https://github.com/ropensci/onboarding&#34;&gt;onboarding&lt;/a&gt; process for contributing new packages, discuss software &lt;a href=&#34;https://ropensci.org/blog/blog/2016/05/25/software-sustanability-ropensci&#34;&gt;sustainability&lt;/a&gt; or tell us how we can help you do open and reproducible research.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;where-s-ropensci&#34;&gt;Where&amp;rsquo;s rOpenSci?&lt;/h3&gt;

&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
    &lt;th style=&#34;text-align:left;&#34;&gt;When&lt;/th&gt;
    &lt;th style=&#34;text-align:left;&#34;&gt;&lt;a href=&#34;https://ropensci.org/about/#team&#34;&gt;Who&lt;/a&gt;&lt;/th&gt;
    &lt;th style=&#34;text-align:left;&#34;&gt;Where&lt;/th&gt;
    &lt;th style=&#34;text-align:left;&#34;&gt;What&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
    &lt;td&gt;May 1-3, 2017&lt;/td&gt;
    &lt;td&gt;Karthik Ram&lt;/td&gt;
    &lt;td&gt;Portland, OR&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://csvconf.com/&#34;&gt;csv,conf,v3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;May 9, 2017&lt;/td&gt;
    &lt;td&gt;Scott Chamberlain&lt;/td&gt;
    &lt;td&gt;Portland, OR&lt;/td&gt;
    &lt;td&gt;Exploring Data with R, guest lecture, U of Oregon&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;May 15-20, 2017&lt;/td&gt;
    &lt;td&gt;Karthik Ram&lt;/td&gt;
    &lt;td&gt;London, UK&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;http://www.nhm.ac.uk/our-science/courses-and-students/advancing-computational-and-data-literacy-for-life-scientists.html&#34;&gt;Advancing computational and data literacy skills schools for life scientists&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;May 25-26, 2017&lt;/td&gt;
    &lt;td&gt;rOpenSci Team&lt;/td&gt;
    &lt;td&gt;Los Angeles, CA&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;http://unconf17.ropensci.org/&#34;&gt;rOpenSci Unconf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Jun 3, 2017&lt;/td&gt;
    &lt;td&gt;Scott Chamberlain&lt;/td&gt;
    &lt;td&gt;Portland, OR&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://cascadiarconf.com/&#34;&gt;CascadiaRConf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Jun 5-7, 2017&lt;/td&gt;
    &lt;td&gt;Stefanie Butland&lt;/td&gt;
    &lt;td&gt;Washington, DC&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://www.aaas.org/cefp/meet-our-fellows&#34;&gt;AAAS Community Engagement Fellows meeting&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Jun 8, 2017&lt;/td&gt;
    &lt;td&gt;Karthik Ram&lt;/td&gt;
    &lt;td&gt;Stanford, CA&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;http://med.stanford.edu/dbds/education/workshop.html&#34;&gt;Stanford biostatistics seminar&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Jun 11-16, 2017&lt;/td&gt;
    &lt;td&gt;Jenny Bryan&lt;/td&gt;
    &lt;td&gt;Bressanone - Brixen, IT&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;http://www.huber.embl.de/csama2017/&#34;&gt;Statistical Data Analysis for Genome Scale Biology&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Jun 23, 2017&lt;/td&gt;
    &lt;td&gt;Scott Chamberlain&lt;/td&gt;
    &lt;td&gt;Portland, OR&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;http://www.ievobio.org/&#34;&gt;iEvoBio&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Jul 4-7, 2017&lt;/td&gt;
    &lt;td&gt;Jeroen Ooms&lt;/td&gt;
    &lt;td&gt;Brussels, BE&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://user2017.brussels/&#34;&gt;UseR&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Aug 8, 2017&lt;/td&gt;
    &lt;td&gt;Karthik Ram&lt;/td&gt;
    &lt;td&gt;Baltimore, MD&lt;/td&gt;
    &lt;td&gt;Space Telescope Science Institute Engineering Colloquium&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Oct 26-27, 2017&lt;/td&gt;
    &lt;td&gt;TBD&lt;/td&gt;
    &lt;td&gt;Melbourne, AU&lt;/td&gt;
    &lt;td&gt;&lt;a href=&#34;https://njtierney.typeform.com/to/RzeQVp&#34;&gt;2nd Annual rOpenSci AU-Unconf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
      </description>
    </item>
    
    <item>
      <title>Welcome to our rOpenSci Interns</title>
      <link>https://ropensci.org/blog/2017/04/27/ropensci-interns/</link>
      <pubDate>Thu, 27 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/04/27/ropensci-interns/</guid>
      <description>
        
        

&lt;p&gt;There&amp;rsquo;s a lot of work that goes in to making software: the code that does the thing itself, unit testing, examples, tutorials, documentation, and support. rOpenSci software is created and maintained both by our &lt;a href=&#34;https://ropensci.org/about/#staff&#34;&gt;staff&lt;/a&gt; and by our (awesome) community. In keeping with our aim to build capacity of software users and developers, three interns from our academic home at &lt;a href=&#34;https://bids.berkeley.edu/research&#34;&gt;UC Berkeley&lt;/a&gt; are now working with us as well. Our interns are mentored by &lt;a href=&#34;https://ropensci.org/about/#team&#34;&gt;Carl Boettiger&lt;/a&gt;, &lt;a href=&#34;https://ropensci.org/about/#team&#34;&gt;Scott Chamberlain&lt;/a&gt;, and &lt;a href=&#34;https://ropensci.org/about/#team&#34;&gt;Karthik Ram&lt;/a&gt; and they will receive academic credit and/or pay for their work.&lt;/p&gt;

&lt;h2 id=&#34;the-interns&#34;&gt;The interns&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Katie Rice:

&lt;ul&gt;
&lt;li&gt;Is a third-year undergraduate student doing a major in Environmental Sciences and a minor in Sustainable Design&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/katieroserice&#34;&gt;Katie on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Diana Ly:

&lt;ul&gt;
&lt;li&gt;Is a third-year undergraduate student doing a major in Mathematics.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/diana-ly&#34;&gt;Diana on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Siwei (Steven) Ye:

&lt;ul&gt;
&lt;li&gt;Is a second-year undergraduate student doing a double major in Mathematics and Statistics&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/steven2249&#34;&gt;Steven on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;what-they-re-working-on&#34;&gt;What they&amp;rsquo;re working on&lt;/h2&gt;

&lt;h3 id=&#34;katie&#34;&gt;Katie&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-04-27-ropensci-interns/katie.jpg&#34; width=&#34;250&#34;&gt;&lt;/p&gt;

&lt;p&gt;README&amp;rsquo;s are the first thing someone reads when landing on a GitHub repository. Thus, it&amp;rsquo;s important that the README has sufficient information to tell the reader what the software is for, who it&amp;rsquo;s meant for, what it does, how to install and how to give feedback.&lt;/p&gt;

&lt;p&gt;Most software maintainers do a good job with how to install and how to give feedback (link to issues tab usually), but we often fall short on describing at a high level what the piece of software is about.&lt;/p&gt;

&lt;p&gt;This is where Katie comes in! She&amp;rsquo;s been going through &lt;a href=&#34;https://github.com/ropensci&#34;&gt;rOpenSci repositories&lt;/a&gt; on GitHub, improving the high level description of the software and then sending pull requests with changes to the README&amp;rsquo;s.&lt;/p&gt;

&lt;p&gt;Check out Katie&amp;rsquo;s &lt;a href=&#34;https://github.com/search?p=1&amp;amp;q=is%3Apr+involves%3Akatieroserice+user%3Aropensci&amp;amp;type=Issues&#34;&gt;GitHub activity for rOpenSci related work&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;diana&#34;&gt;Diana&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-04-27-ropensci-interns/diana.jpg&#34; width=&#34;350&#34;&gt;&lt;/p&gt;

&lt;p&gt;Diana is just getting started. She&amp;rsquo;ll be working on documentation and maintenance.&lt;/p&gt;

&lt;p&gt;In addition, she&amp;rsquo;ll be working on an R package that will make it easy to make &lt;a href=&#34;https://github.com/ropensci/cheatsheets&#34;&gt;cheatsheets&lt;/a&gt; for packages from simple markdown templates - no editing powerpoint or keynote files needed!&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;steven&#34;&gt;Steven&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-04-27-ropensci-interns/steven.JPG&#34; width=&#34;250&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Unit_testing&#34;&gt;Software unit tests&lt;/a&gt; (method to determine whether software components perform as designed) are very important. We have it as &lt;a href=&#34;https://github.com/ropensci/onboarding/blob/master/issue_template.md&#34;&gt;policy that packages submitted to our onboarding repository have tests&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In addition, we build and check our software on each change (includes running tests). However, since rOpenSci has been around for a while, there are still some packages that don&amp;rsquo;t have tests, or enough of them. In addition, when you have tests, you can calculate test coverage using, for example with &lt;a href=&#34;https://codecov.io/&#34;&gt;Codecov&lt;/a&gt; - a good way to target what tests to write.&lt;/p&gt;

&lt;p&gt;Lastly, it&amp;rsquo;s ideal to signal to potential users that you have continuous integration and test coverage through badges, like this one:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://codecov.io/github/ropensci/rredlist?branch=master&#34;&gt;&lt;img src=&#34;https://codecov.io/github/ropensci/rredlist/coverage.svg?branch=master&#34; alt=&#34;codecov.io&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is where Steven comes in! When a package has tests already, he adds integration for Codecov and a badge for it (like the one above) when it&amp;rsquo;s missing. When packages don&amp;rsquo;t have tests, he writes them, including integrating Codecov.&lt;/p&gt;

&lt;p&gt;Check out Steven&amp;rsquo;s &lt;a href=&#34;https://github.com/search?p=1&amp;amp;q=is%3Apr+involves%3Asteven2249+user%3Aropensci&amp;amp;type=Issues&#34;&gt;GitHub activity for rOpenSci related work&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;want-to-be-an-ropensci-intern&#34;&gt;Want to be an rOpenSci intern?&lt;/h2&gt;

&lt;p&gt;We&amp;rsquo;ll be looking for new interns from time to time. Contact us at &lt;a href=&#34;mailto:info@ropensci.org&#34;&gt;info@ropensci.org&lt;/a&gt; with any questions.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Release mongolite 1.0</title>
      <link>https://ropensci.org/blog/2017/03/10/mongolite/</link>
      <pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/03/10/mongolite/</guid>
      <description>
        
        

&lt;p&gt;After 2.5 years of development, version 1.0 of the &lt;a href=&#34;https://cran.r-project.org/web/packages/mongolite/index.html&#34;&gt;mongolite&lt;/a&gt; package has been released to CRAN. The package is now stable, well documented, and will soon be submitted for peer review to be onboarded in the rOpenSci suite.&lt;/p&gt;

&lt;h2 id=&#34;mongodb-in-r-and-mongolite&#34;&gt;MongoDB in R and mongolite&lt;/h2&gt;

&lt;p&gt;I started working on mongolite in September 2014, and it was first announced at the rOpenSci &lt;a href=&#34;https://twitter.com/_inundata/status/581605601882480640/photo/1&#34;&gt;unconf 2015&lt;/a&gt;. At this time, there were already two Mongo clients on CRAN: &lt;a href=&#34;https://cran.r-project.org/web/packages/rmongodb/index.html&#34;&gt;rmongodb&lt;/a&gt; (no longer works) and &lt;a href=&#34;https://cran.r-project.org/web/packages/RMongo/index.html&#34;&gt;RMongo&lt;/a&gt; (depends on Java). However I found both of them pretty clunky, and the MongoDB folks had just released 1.0 of their new C driver, so I decided to write a new client from scratch.&lt;/p&gt;

&lt;p&gt;Mongolite aims to provide a &lt;em&gt;simple&lt;/em&gt; R client for MongoDB, based on the excellent &lt;a href=&#34;https://github.com/mongodb/mongo-c-driver&#34;&gt;mongo-c-driver&lt;/a&gt; combined with super-powers from the &lt;a href=&#34;https://cran.r-project.org/web/packages/jsonlite/index.html&#34;&gt;jsonlite&lt;/a&gt; package. Simple means insert and query data in R using data-frames with a single command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Create a connection
con &amp;lt;- mongolite::mongo(&amp;quot;diamonds&amp;quot;,
  url = &amp;quot;mongodb://readwrite:test@ds043942.mongolab.com:43942/jeroen_test&amp;quot;)

# Find diamonds with: cut == Premium &amp;amp; price &amp;lt; 500
mydata &amp;lt;- con$find(&#39;{&amp;quot;cut&amp;quot; : &amp;quot;Premium&amp;quot;, &amp;quot;price&amp;quot; : { &amp;quot;$lt&amp;quot; : 500 } }&#39;)
print(mydata)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running your own MongoDB server is easy. Either &lt;a href=&#34;https://www.mongodb.com/download-center&#34;&gt;download&lt;/a&gt; it from the website or install it with your favorite package manager. To start the server simply run the &lt;code&gt;mongod&lt;/code&gt; command (d for daemon) in a shell:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Install mongoDB server
brew install mongodb

# Run the server dameon
mongod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;mongolite::mongo()&lt;/code&gt; function wil default to the localhost server if no URI is specified. Try inserting and reading some data:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Create a connection
con &amp;lt;- mongolite::mongo(&amp;quot;iris&amp;quot;)

# Insert some data
con$insert(datasets::iris)

# Count how much data is in the DB
con$count()

# Read the data back
con$find(&#39;{}&#39;)

# Wipe the collection
con$drop()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In my experience, a simple interface is critical to get started. Obviously, advanced features are available in mongolite as well, but this will get you up to speed right way if you just need the data and get on with your job.&lt;/p&gt;

&lt;h2 id=&#34;bookdown-documentation&#34;&gt;Bookdown documentation&lt;/h2&gt;

&lt;p&gt;The 1.0 release has fresh documentation based on the awesome bookdown system. You can find documentation on the mongolite &lt;a href=&#34;https://jeroen.github.io/mongolite/&#34;&gt;github homepage&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://jeroen.github.io/mongolite/&#34;&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/mongolite-docs.png&#34; alt=&#34;mongolite-docs&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The bookdown is now the primary documentation source for mongolite.&lt;/p&gt;

&lt;h2 id=&#34;why-mongodb&#34;&gt;Why MongoDB&lt;/h2&gt;

&lt;p&gt;MongoDB is the &lt;a href=&#34;(http://db-engines.com/en/ranking)&#34;&gt;most popular&lt;/a&gt; nosql database (by market share), and the 5th most popular database allround. Mongo is relatively young in comparison with the traditional engines (Oracle, Microsoft, MySQL, Postgres), yet well established, fully open source, and backed by a professional company.&lt;/p&gt;

&lt;p&gt;MongoDB provides a modern high-performance DB engine with cool features that cannot be found anywhere else. The high quality client drivers are a pleasure to work with, and actively maintained by professional engineers. Writing bindings, it quickly became obvious that Mongo does not suffer from the legacy bloat that I have come to associate with traditional DB engines.&lt;/p&gt;

&lt;p&gt;At the same time the ecosystem is mature and offers reliability and continuity that makes it stand out from the proliferation of nosql systems. MongoDB has been widely adopted by users and distributions, so I am pretty confident it will still be around 5 or 10 years from now.&lt;/p&gt;

&lt;h2 id=&#34;changes-in-1-0&#34;&gt;Changes in 1.0&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/jeroen/mongolite/blob/master/NEWS&#34;&gt;NEWS&lt;/a&gt; file on Github lists what has changed in this release:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;New mongo bookdown docs at &lt;a href=&#34;https://jeroen.github.io/mongolite&#34;&gt;https://jeroen.github.io/mongolite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update mongo-c-driver to upstream 1.6.0&lt;/li&gt;
&lt;li&gt;Add basic decimal 128 support (coerce to double)&lt;/li&gt;
&lt;li&gt;Improve enterprise authentication for LDAP, X509 and Kerberos&lt;/li&gt;
&lt;li&gt;Windows: build with SSPI instead of SASL&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;allow_invalid_hostname&lt;/code&gt; parameter to &lt;code&gt;ssl_options()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Option &lt;code&gt;bigint_as_char&lt;/code&gt; to parse int64 into string instead of double&lt;/li&gt;
&lt;li&gt;New function &lt;code&gt;mongo_options()&lt;/code&gt; to get/set global options&lt;/li&gt;
&lt;li&gt;Function &lt;code&gt;mongo_log_level()&lt;/code&gt; is removed (use &lt;code&gt;mongo_options()&lt;/code&gt; instead)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;insert()&lt;/code&gt; now substitutes dots in key (column) names with underscores&lt;/li&gt;
&lt;li&gt;Various fixes in &lt;code&gt;update()&lt;/code&gt;, support for upsert&lt;/li&gt;
&lt;li&gt;Add unit tests from bson spec (some tests fail in mongo-c-driver)&lt;/li&gt;
&lt;li&gt;Switch to new C driver API mongoc_collection_find_with_opts()&lt;/li&gt;
&lt;li&gt;Add R_registerRoutines() call to please CMD check&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tell-us-what-you-think&#34;&gt;Tell us what you think&lt;/h2&gt;

&lt;p&gt;At rOpenSci we&amp;rsquo;re interested to hear who is using R and how. If you decide to give mongolite a try, please share your experiences and suggestions. Open an &lt;a href=&#34;https://github.com/jeroen/mongolite/issues&#34;&gt;issue on github&lt;/a&gt; for specific problems and feature requests, or join the rOpenSci &lt;a href=&#34;https://ropensci.slack.com&#34;&gt;slack&lt;/a&gt; to talk about mongolite or other rOpenSci packages. Or just come say hi and hang out :)&lt;/p&gt;

&lt;p&gt;We both love hearing from academic users, but also industry applications of R and synergy between the industry and open source scientific software.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Community Call v13 - How to ask questions so they get answered! Possibly by yourself!</title>
      <link>https://ropensci.org/blog/2017/02/17/comm-call-v13/</link>
      <pubDate>Fri, 17 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/02/17/comm-call-v13/</guid>
      <description>
        
        

&lt;p&gt;Our &lt;a href=&#34;https://github.com/ropensci/commcalls/issues/14&#34;&gt;Community Call on Tuesday, March 7th, 8-9 AM PST&lt;/a&gt;, will cover &amp;ldquo;How to ask questions so they get answered! Possibly by yourself!&amp;rdquo;. Asking questions about programming is a skill you can develop - we&amp;rsquo;re not just born with it. The speakers will cover some of the background and skills you&amp;rsquo;ll need to increase your chances of having your questions answered by your peers or by a busy expert.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ropensci/commcalls/issues/14&#34;&gt;Join the Call&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;agenda&#34;&gt;Agenda&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Welcome (5 min, Stefanie Butland)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;James (JD) Long&lt;/strong&gt; will review the historical challenges of getting R help and give some history about how the &lt;a href=&#34;http://stackoverflow.com/questions/tagged/r&#34;&gt;&lt;code&gt;[r]&lt;/code&gt; tag on Stack Overflow&lt;/a&gt; was bootstrapped. (15 min)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jenny Bryan&lt;/strong&gt; will talk about the mechanics of making reproducible examples using the &lt;a href=&#34;https://github.com/jennybc/reprex&#34;&gt;reprex&lt;/a&gt; package. Just as important, she&amp;rsquo;ll discuss the philosophy i.e. that forcing yourself to make little, rigorous, self-contained examples makes you think more clearly about programming. (20min)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scott Chamberlain&lt;/strong&gt; will show you how best to raise issues and ask questions on &lt;a href=&#34;https://ropensci.org/packages/&#34;&gt;rOpenSci packages&lt;/a&gt; (10 min)&lt;/li&gt;
&lt;li&gt;Q &amp;amp; A (10 min, moderated by Scott Chamberlain)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Nick Tierney&amp;rsquo;s &lt;a href=&#34;http://www.njtierney.com/r/rbloggers/2017/01/11/reprex-magic/&#34;&gt;blog post about the reprex package&lt;/a&gt; that Jenny Bryan will talk about&lt;/li&gt;
&lt;li&gt;Noam Ross&amp;rsquo;s analysis of the most common types of error messages R users post about on Stack Overflow, motivated by his interest in teaching problem-solving skills in R: &lt;a href=&#34;https://github.com/noamross/zero-dependency-problems/blob/master/misc/stack-overflow-common-r-errors.md&#34;&gt;Common errors in R: An Empirical Investigation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;rOpenSci &lt;a href=&#34;https://discuss.ropensci.org/&#34;&gt;discussion forum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Soon after the call, we&amp;rsquo;ll post the &lt;a href=&#34;https://vimeo.com/ropensci/videos&#34;&gt;video&lt;/a&gt; and we plan to capture the highlights and links to resources in a follow-up blog post.&lt;/p&gt;

&lt;h2 id=&#34;speaker-bios&#34;&gt;Speaker bios&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;James (JD) Long&lt;/strong&gt; works in reinsurance in New York City. He builds risk models which, according to &lt;a href=&#34;http://www.tandfonline.com/doi/abs/10.1080/01621459.1976.10480949&#34;&gt;George Box&lt;/a&gt;, are wrong. In spite of this inconvenient truth, James has proved successful at convincing his employer that his models are useful. James writes poorly commented, inefficient code using Python, R, SQL, and expletives.&lt;/p&gt;

&lt;p&gt;James grew up in Kentucky and has multiple degrees from the University of Kentucky. After being marooned on the archipelago of Bermuda for four years, James now lives in Jersey City, NJ with his Minecraft addicted 9 year old daughter and his wife, a recovering trial lawyer.&lt;/p&gt;

&lt;p&gt;James on &lt;a href=&#34;https://github.com/CerebralMastication&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/CMastication&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jenny Bryan&lt;/strong&gt; is a member of rOpenSci&amp;rsquo;s Leadership team, a software engineer at &lt;a href=&#34;https://www.rstudio.com/&#34;&gt;RStudio&lt;/a&gt; and Associate Professor (on leave) in the Statistics Department at the University of British Columbia. She&amp;rsquo;s a biostatistician specialized in genomics and takes a special interest and delight in data analysis and statistical computing. Jenny is known for her outstanding teaching and her use of lego and mullets (the hair, not the fish) to illustrate #rstats.&lt;/p&gt;

&lt;p&gt;Jenny on &lt;a href=&#34;https://github.com/jennybc&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/jennybryan&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scott Chamberlain&lt;/strong&gt; is co-founder and technical lead at rOpenSci and tries to answer lots of user questions via email/twitter/github/discussion forum. He has specific expertise in developing packages for handling &lt;a href=&#34;https://ropensci.org/tutorials/taxize_tutorial.html&#34;&gt;taxonomy&lt;/a&gt;, &lt;a href=&#34;https://ropensci.org/blog/blog/2016/11/22/geospatial-suite&#34;&gt;geospatial analyses&lt;/a&gt; and &lt;a href=&#34;https://ropensci.org/packages/#literature&#34;&gt;accessing journal full-text or metadata&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Scott on &lt;a href=&#34;https://github.com/sckott&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/sckottie&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>From a million nested `ifelse`s to the plater package</title>
      <link>https://ropensci.org/blog/2017/02/06/plater-blog-post/</link>
      <pubDate>Mon, 06 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ropensci.org/blog/2017/02/06/plater-blog-post/</guid>
      <description>
        
        

&lt;p&gt;As a lab scientist, I do almost all of my experiments in &lt;a href=&#34;https://en.wikipedia.org/wiki/Microtiter_plate&#34;&gt;microtiter plates&lt;/a&gt;. These tools are an efficient means of organizing many parallel experimental conditions. It&amp;rsquo;s not always easy, however, to translate between the physical plate and a useful data structure for analysis. My first attempts to solve this problem&amp;ndash;nesting one &lt;code&gt;ifelse&lt;/code&gt; call inside of the next to describe which well was which&amp;ndash;were very unsatisfying. Over time, my attempts at solving the problem grew more sophisticated, and eventually, the &lt;code&gt;plater&lt;/code&gt; package was born. Here I will tell the story of how with the help of &lt;a href=&#34;http://r-pkgs.had.co.nz/&#34;&gt;R Packages&lt;/a&gt; and the amazing reviewers (&lt;a href=&#34;http://www.juliagustavsen.com/&#34;&gt;Julia Gustavsen&lt;/a&gt; and &lt;a href=&#34;http://deanattali.com/&#34;&gt;Dean Attali&lt;/a&gt;) and &lt;a href=&#34;https://scottchamberlain.info/&#34;&gt;editors&lt;/a&gt; at rOpenSci, I ended up with a package that makes it easy to work with plate-based data.&lt;/p&gt;

&lt;h2 id=&#34;plates-are-great&#34;&gt;Plates are great&lt;/h2&gt;

&lt;p&gt;Microtiter plates are essential in the lab. Basically an ice cube tray about the size of an index card, they have &amp;ldquo;wells&amp;rdquo; for between 6 and 384 ice cubes (up to 6144 if you&amp;rsquo;re a robot!). Except instead of freezing water, you use each well for a different sample or experimental condition.&lt;/p&gt;

&lt;p&gt;For example, say I have 8 samples and want to test 4 different drugs. Each drug should be tested on each sample three separate times to ensure accurate results. A 96-well plate is perfect for this: it&amp;rsquo;s a grid of 12 columns and 8 rows. So each sample would go in its own row. Each drug would then go in a group of three columns, say Drug A in columns 1-3, Drug B in columns 4-6, and so on. This is shown below, with the numbers 1-8 representing samples and the colors representing groups of wells treated with the same drug.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ropensci.org/assets/blog-images/2017-02-plater-post/plate-1.png&#34; alt=&#34;Example plate layout&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Typically, I make myself a map like the image above before I start the experiment, then I take it with me into the lab when I&amp;rsquo;m ready to begin. The map creates a powerful mental connection between each experimental condition and its particular physical location on the plate. With large effects, you might even be able to visually see the results of your experiment: all the cells in this column died, or the cells grew like crazy in that row.&lt;/p&gt;

&lt;p&gt;This is very convenient to work with physically and remember mentally.&lt;/p&gt;

&lt;h2 id=&#34;plates-are-not-tidy&#34;&gt;Plates are not tidy&lt;/h2&gt;

&lt;p&gt;The problem is that you can pack a ton of complexity into a small experiment and mapping that back into a &lt;a href=&#34;https://www.jstatsoft.org/article/view/v059i10&#34;&gt;tidy&lt;/a&gt; framework for analysis isn&amp;rsquo;t always easy.&lt;/p&gt;

&lt;p&gt;One way to map from data to plate is through well IDs. Each well has one. For example, the top left well is in row A and column 1, so its ID is A01. The well in the third row down and 5th column over is C05. But how do you say that everything in row A is sample X, everything in row B is sample Y, and so on?&lt;/p&gt;

&lt;p&gt;My first strategy was to put it in the code, with a mess like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;data &amp;lt;- dplyr::mutate(data,
            Sample = ifelse(Row == &amp;quot;A&amp;quot;, &amp;quot;Sample X&amp;quot;, ifelse(
                Row == &amp;quot;B&amp;quot;, &amp;quot;Sample Y&amp;quot;, ifelse(
                    ...))),
            Treatment = ifelse(Column %in% 1:3, &amp;quot;Drug A&amp;quot;, ifelse(
                Column %in% 4:6, &amp;quot;Drug B&amp;quot;, ifelse(
                    ...)))
            )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But doing it this way made me want to cry.&lt;/p&gt;

&lt;p&gt;My next strategy was to try to directly make a table and then merge it into the data. The table would look something like this:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;WellId&lt;/th&gt;
&lt;th&gt;Sample&lt;/th&gt;
&lt;th&gt;Treatment&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A01&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;Drug A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A02&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;Drug A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A03&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;Drug A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A04&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;Drug B&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;B01&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Drug A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;B01&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Drug A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;While this merges nicely into a data frame and solves the problem of indicating what each well is, it&amp;rsquo;s actually not that easy to create by hand, especially in more realistic experiments with more variables and a more complex plate layout. Even worse, there is a substantial risk of typos and copy-paste errors.&lt;/p&gt;

&lt;h2 id=&#34;plater-to-the-rescue&#34;&gt;&lt;code&gt;plater&lt;/code&gt; to the rescue&lt;/h2&gt;

&lt;p&gt;The solution came from the plates themselves: store the data and mapping in the shape of the plate and then transform it into a tidy shape. Scientific instruments often provide data in the shape of a plate, in fact: you get back a spreadsheet with a grid of numbers shaped like your plate, with a cell for each well.&lt;/p&gt;

&lt;p&gt;My first step was to write a function to convert one of those plate-shaped grids to a data frame with two columns: one of plate IDs and one of the numbers (machine read-out).&lt;/p&gt;

&lt;p&gt;So now I could take a &lt;code&gt;.csv&lt;/code&gt; file with plate-shaped data and convert it into tidy form and connect it with the well ID. It didn&amp;rsquo;t take long for me to start creating &lt;code&gt;.csv&lt;/code&gt; files with sample and treatment information as well and then merging the data frames together. Now I could create plate maps really easily because they looked just like the plate I did the experiment in.&lt;/p&gt;

&lt;h2 id=&#34;a-package-takes-shape&#34;&gt;A package takes shape&lt;/h2&gt;

&lt;p&gt;With time and feedback from &lt;a href=&#34;https://github.com/ClaireLevy&#34;&gt;others in the lab&lt;/a&gt;, I refined the system. Instead of creating separate files for each variable (treatment, sample, data, &amp;hellip;), everything could go in one &lt;code&gt;.csv&lt;/code&gt; file, with sequential plate layouts for each variable (say, treatment or sample). I started calling this the &lt;code&gt;plater&lt;/code&gt; format and storing all of my data that way. These files are especially nice because they give an overview of the whole experiment in a compact format.&lt;/p&gt;

&lt;p&gt;Eventually, I boiled it down to a small set of functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;read_plate&lt;/code&gt;: takes a &lt;code&gt;plater&lt;/code&gt; format file and gives you a tidy data frame&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_plates&lt;/code&gt;: takes multiple &lt;code&gt;plater&lt;/code&gt; format files and gives you a big tidy data frame&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add_plate&lt;/code&gt;: takes a &lt;code&gt;plater&lt;/code&gt; format file and a tidy data frame and combines them&lt;/li&gt;
&lt;li&gt;&lt;code&gt;view_plate&lt;/code&gt;: takes a tidy data frame and displays selected variables from it back in plate shape&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;is-this-thing-any-good&#34;&gt;Is this thing any good?&lt;/h2&gt;

&lt;p&gt;With the package in place, I started getting ready to submit it to CRAN, but I wanted to get more feedback first and rOpenSci seemed perfect for that.&lt;/p&gt;

&lt;p&gt;It turned out that the improvements started even before I got any feedback. As I prepared to submit the package to rOpenSci, I went through their &lt;a href=&#34;https://github.com/ropensci/onboarding#how-to-submit-your-package-for-review&#34;&gt;thorough guide&lt;/a&gt;  to make sure &lt;code&gt;plater&lt;/code&gt; met all of the requirements. This process made me aware of best practices and motivated me to handle niggling little details like using consistent &lt;code&gt;snake_case&lt;/code&gt;, making sure all of the documentation was clear, and creating a code of conduct for contributors. In all, I made 22 commits preparing for submission.&lt;/p&gt;

&lt;p&gt;The review process itself led to even more improvement. Two generous reviewers (&lt;a href=&#34;http://www.juliagustavsen.com/&#34;&gt;Julia Gustavsen&lt;/a&gt; and &lt;a href=&#34;http://deanattali.com/&#34;&gt;Dean Attali&lt;/a&gt;) and an &lt;a href=&#34;https://scottchamberlain.info/&#34;&gt;editor&lt;/a&gt; spent multiple hours reading the code, testing the functions, and thinking about how to make it more useful. Their thoughtful suggestions resulted in many changes to the package (I made 61 commits responding to the reviews) that made it more robust and useful. Among others:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make &lt;code&gt;add_plate&lt;/code&gt; more easily pipeable by reordering the arguments&lt;/li&gt;
&lt;li&gt;Add a function &lt;code&gt;check_plater_format&lt;/code&gt; to test if a file is formatted correctly&lt;/li&gt;
&lt;li&gt;Brainstorm a Shiny tool for non-R users to use &lt;code&gt;plater&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Explore alternative visualizations to &lt;code&gt;view_plate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The reviewing process made &lt;code&gt;plater&lt;/code&gt; a much better package and left me feeling confident in putting it up on CRAN with a stable version 1.0.0.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Since transferring &lt;code&gt;plater&lt;/code&gt; over to rOpenSci and putting it onto CRAN, I&amp;rsquo;ve used the package all the time and have shared it with lab mates and colleagues. It works well and does exactly what I want, seamlessly without my needing to even notice it. This level of convenience and utility is the best testament to the efforts of the reviewers and editors of rOpenSci, who helped to make it a better package.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
